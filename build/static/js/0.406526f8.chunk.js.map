{"version":3,"sources":["../../../../utils/chain/defineChain.ts","../../../constants/number.ts","../../../errors/transaction.ts","../../../errors/node.ts","../../../../utils/data/concat.ts","../../../../utils/address/isAddress.ts","../../../errors/address.ts","../../../../utils/data/slice.ts","../../../../utils/hash/keccak256.ts","../../../errors/chain.ts","../../../../utils/address/getAddress.ts","../../../../utils/formatters/transactionRequest.ts","../../../../utils/formatters/transaction.ts","../../../../utils/formatters/log.ts","../../../../utils/encoding/toRlp.ts","../../../../utils/formatters/block.ts","../../../../utils/unit/formatGwei.ts","../../../../utils/formatters/transactionReceipt.ts","../../../../utils/transaction/assertTransaction.ts","../../../../utils/transaction/serializeTransaction.ts","../../../utils/cursor.ts","../../../../utils/blob/blobsToCommitments.ts","../../../../utils/blob/blobsToProofs.ts","../../../../utils/blob/toBlobSidecars.ts","utils.ts","../../../../utils/formatters/formatter.ts","../../../../utils/blob/commitmentsToVersionedHashes.ts","../../../../utils/blob/commitmentToVersionedHash.ts","../../../../utils/hash/sha256.ts","../../../../utils/transaction/getTransactionType.ts","../../../../utils/transaction/serializeAccessList.ts","../../../constants/blob.ts","../../../../utils/blob/toBlobs.ts","_assert.ts","../../../utils/lru.ts","../../../errors/cursor.ts","_sha2.ts","../../../errors/blob.ts","../../../constants/kzg.ts","sha3.ts","_u64.ts","crypto.ts","sha256.ts"],"names":["maxInt8","maxInt16","maxInt24","maxInt32","maxInt40","maxInt48","maxInt56","maxInt64","maxInt72","maxInt80","maxInt88","maxInt96","maxInt104","maxInt112","maxInt120","maxInt128","maxInt136","maxInt144","maxInt152","maxInt160","maxInt168","maxInt176","maxInt184","maxInt192","maxInt200","maxInt208","maxInt216","maxInt224","maxInt232","maxInt240","maxInt248","maxInt256","transaction","this","position","exports","utf8ToBytes","a","hash","exists","instance","LruMap","B","s","lst","h","SHA256_K","H","i"],"mappings":"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","file":"static/js/0.406526f8.chunk.js","sourcesContent":["export function defineChain(chain) {\n    return {\n        formatters: undefined,\n        fees: undefined,\n        serializers: undefined,\n        ...chain,\n    };\n}\n//# sourceMappingURL=defineChain.js.map","export const maxInt8 = 2n ** (8n - 1n) - 1n;\nexport const maxInt16 = 2n ** (16n - 1n) - 1n;\nexport const maxInt24 = 2n ** (24n - 1n) - 1n;\nexport const maxInt32 = 2n ** (32n - 1n) - 1n;\nexport const maxInt40 = 2n ** (40n - 1n) - 1n;\nexport const maxInt48 = 2n ** (48n - 1n) - 1n;\nexport const maxInt56 = 2n ** (56n - 1n) - 1n;\nexport const maxInt64 = 2n ** (64n - 1n) - 1n;\nexport const maxInt72 = 2n ** (72n - 1n) - 1n;\nexport const maxInt80 = 2n ** (80n - 1n) - 1n;\nexport const maxInt88 = 2n ** (88n - 1n) - 1n;\nexport const maxInt96 = 2n ** (96n - 1n) - 1n;\nexport const maxInt104 = 2n ** (104n - 1n) - 1n;\nexport const maxInt112 = 2n ** (112n - 1n) - 1n;\nexport const maxInt120 = 2n ** (120n - 1n) - 1n;\nexport const maxInt128 = 2n ** (128n - 1n) - 1n;\nexport const maxInt136 = 2n ** (136n - 1n) - 1n;\nexport const maxInt144 = 2n ** (144n - 1n) - 1n;\nexport const maxInt152 = 2n ** (152n - 1n) - 1n;\nexport const maxInt160 = 2n ** (160n - 1n) - 1n;\nexport const maxInt168 = 2n ** (168n - 1n) - 1n;\nexport const maxInt176 = 2n ** (176n - 1n) - 1n;\nexport const maxInt184 = 2n ** (184n - 1n) - 1n;\nexport const maxInt192 = 2n ** (192n - 1n) - 1n;\nexport const maxInt200 = 2n ** (200n - 1n) - 1n;\nexport const maxInt208 = 2n ** (208n - 1n) - 1n;\nexport const maxInt216 = 2n ** (216n - 1n) - 1n;\nexport const maxInt224 = 2n ** (224n - 1n) - 1n;\nexport const maxInt232 = 2n ** (232n - 1n) - 1n;\nexport const maxInt240 = 2n ** (240n - 1n) - 1n;\nexport const maxInt248 = 2n ** (248n - 1n) - 1n;\nexport const maxInt256 = 2n ** (256n - 1n) - 1n;\nexport const minInt8 = -(2n ** (8n - 1n));\nexport const minInt16 = -(2n ** (16n - 1n));\nexport const minInt24 = -(2n ** (24n - 1n));\nexport const minInt32 = -(2n ** (32n - 1n));\nexport const minInt40 = -(2n ** (40n - 1n));\nexport const minInt48 = -(2n ** (48n - 1n));\nexport const minInt56 = -(2n ** (56n - 1n));\nexport const minInt64 = -(2n ** (64n - 1n));\nexport const minInt72 = -(2n ** (72n - 1n));\nexport const minInt80 = -(2n ** (80n - 1n));\nexport const minInt88 = -(2n ** (88n - 1n));\nexport const minInt96 = -(2n ** (96n - 1n));\nexport const minInt104 = -(2n ** (104n - 1n));\nexport const minInt112 = -(2n ** (112n - 1n));\nexport const minInt120 = -(2n ** (120n - 1n));\nexport const minInt128 = -(2n ** (128n - 1n));\nexport const minInt136 = -(2n ** (136n - 1n));\nexport const minInt144 = -(2n ** (144n - 1n));\nexport const minInt152 = -(2n ** (152n - 1n));\nexport const minInt160 = -(2n ** (160n - 1n));\nexport const minInt168 = -(2n ** (168n - 1n));\nexport const minInt176 = -(2n ** (176n - 1n));\nexport const minInt184 = -(2n ** (184n - 1n));\nexport const minInt192 = -(2n ** (192n - 1n));\nexport const minInt200 = -(2n ** (200n - 1n));\nexport const minInt208 = -(2n ** (208n - 1n));\nexport const minInt216 = -(2n ** (216n - 1n));\nexport const minInt224 = -(2n ** (224n - 1n));\nexport const minInt232 = -(2n ** (232n - 1n));\nexport const minInt240 = -(2n ** (240n - 1n));\nexport const minInt248 = -(2n ** (248n - 1n));\nexport const minInt256 = -(2n ** (256n - 1n));\nexport const maxUint8 = 2n ** 8n - 1n;\nexport const maxUint16 = 2n ** 16n - 1n;\nexport const maxUint24 = 2n ** 24n - 1n;\nexport const maxUint32 = 2n ** 32n - 1n;\nexport const maxUint40 = 2n ** 40n - 1n;\nexport const maxUint48 = 2n ** 48n - 1n;\nexport const maxUint56 = 2n ** 56n - 1n;\nexport const maxUint64 = 2n ** 64n - 1n;\nexport const maxUint72 = 2n ** 72n - 1n;\nexport const maxUint80 = 2n ** 80n - 1n;\nexport const maxUint88 = 2n ** 88n - 1n;\nexport const maxUint96 = 2n ** 96n - 1n;\nexport const maxUint104 = 2n ** 104n - 1n;\nexport const maxUint112 = 2n ** 112n - 1n;\nexport const maxUint120 = 2n ** 120n - 1n;\nexport const maxUint128 = 2n ** 128n - 1n;\nexport const maxUint136 = 2n ** 136n - 1n;\nexport const maxUint144 = 2n ** 144n - 1n;\nexport const maxUint152 = 2n ** 152n - 1n;\nexport const maxUint160 = 2n ** 160n - 1n;\nexport const maxUint168 = 2n ** 168n - 1n;\nexport const maxUint176 = 2n ** 176n - 1n;\nexport const maxUint184 = 2n ** 184n - 1n;\nexport const maxUint192 = 2n ** 192n - 1n;\nexport const maxUint200 = 2n ** 200n - 1n;\nexport const maxUint208 = 2n ** 208n - 1n;\nexport const maxUint216 = 2n ** 216n - 1n;\nexport const maxUint224 = 2n ** 224n - 1n;\nexport const maxUint232 = 2n ** 232n - 1n;\nexport const maxUint240 = 2n ** 240n - 1n;\nexport const maxUint248 = 2n ** 248n - 1n;\nexport const maxUint256 = 2n ** 256n - 1n;\n//# sourceMappingURL=number.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport function prettyPrint(args) {\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\nexport class FeeConflictError extends BaseError {\n    constructor() {\n        super([\n            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeConflictError'\n        });\n    }\n}\nexport class InvalidLegacyVError extends BaseError {\n    constructor({ v }) {\n        super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidLegacyVError'\n        });\n    }\n}\nexport class InvalidSerializableTransactionError extends BaseError {\n    constructor({ transaction }) {\n        super('Cannot infer a transaction type from provided transaction.', {\n            metaMessages: [\n                'Provided Transaction:',\n                '{',\n                prettyPrint(transaction),\n                '}',\n                '',\n                'To infer the type, either provide:',\n                '- a `type` to the Transaction, or',\n                '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n                '- a Legacy Transaction with `gasPrice`',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializableTransactionError'\n        });\n    }\n}\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n    constructor({ serializedType }) {\n        super(`Serialized transaction type \"${serializedType}\" is invalid.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionType'\n        });\n        Object.defineProperty(this, \"serializedType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedType = serializedType;\n    }\n}\nexport class InvalidSerializedTransactionError extends BaseError {\n    constructor({ attributes, serializedTransaction, type, }) {\n        const missing = Object.entries(attributes)\n            .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n            .filter(Boolean);\n        super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n            metaMessages: [\n                `Serialized Transaction: \"${serializedTransaction}\"`,\n                missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionError'\n        });\n        Object.defineProperty(this, \"serializedTransaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedTransaction = serializedTransaction;\n        this.type = type;\n    }\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n    constructor({ storageKey }) {\n        super(`Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidStorageKeySizeError'\n        });\n    }\n}\nexport class TransactionExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            chain: chain && `${chain?.name} (id: ${chain?.id})`,\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionExecutionError'\n        });\n        this.cause = cause;\n    }\n}\nexport class TransactionNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, blockTag, hash, index, }) {\n        let identifier = 'Transaction';\n        if (blockTag && index !== undefined)\n            identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`;\n        if (blockHash && index !== undefined)\n            identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`;\n        if (blockNumber && index !== undefined)\n            identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`;\n        if (hash)\n            identifier = `Transaction with hash \"${hash}\"`;\n        super(`${identifier} could not be found.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionNotFoundError'\n        });\n    }\n}\nexport class TransactionReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionReceiptNotFoundError'\n        });\n    }\n}\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WaitForTransactionReceiptTimeoutError'\n        });\n    }\n}\n//# sourceMappingURL=transaction.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ExecutionRevertedError'\n        });\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FeeCapTooHighError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooHigh'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nexport class FeeCapTooLowError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooLow'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nexport class NonceTooHighError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooHighError'\n        });\n    }\n}\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nexport class NonceTooLowError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooLowError'\n        });\n    }\n}\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nexport class NonceMaxValueError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceMaxValueError'\n        });\n    }\n}\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nexport class InsufficientFundsError extends BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InsufficientFundsError'\n        });\n    }\n}\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds/\n});\nexport class IntrinsicGasTooHighError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooHighError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nexport class IntrinsicGasTooLowError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooLowError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nexport class TransactionTypeNotSupportedError extends BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionTypeNotSupportedError'\n        });\n    }\n}\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nexport class TipAboveFeeCapError extends BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TipAboveFeeCapError'\n        });\n    }\n}\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nexport class UnknownNodeError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnknownNodeError'\n        });\n    }\n}\n//# sourceMappingURL=node.js.map","export function concat(values) {\n    if (typeof values[0] === 'string')\n        return concatHex(values);\n    return concatBytes(values);\n}\nexport function concatBytes(values) {\n    let length = 0;\n    for (const arr of values) {\n        length += arr.length;\n    }\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const arr of values) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\nexport function concatHex(values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n}\n//# sourceMappingURL=concat.js.map","import { LruMap } from '../lru.js';\nimport { checksumAddress } from './getAddress.js';\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/;\nexport const isAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function isAddress(address, options) {\n    const { strict = true } = options ?? {};\n    if (isAddressCache.has(address))\n        return isAddressCache.get(address);\n    const result = (() => {\n        if (!addressRegex.test(address))\n            return false;\n        if (address.toLowerCase() === address)\n            return true;\n        if (strict)\n            return checksumAddress(address) === address;\n        return true;\n    })();\n    isAddressCache.set(address, result);\n    return result;\n}\n//# sourceMappingURL=isAddress.js.map","import { BaseError } from './base.js';\nexport class InvalidAddressError extends BaseError {\n    constructor({ address }) {\n        super(`Address \"${address}\" is invalid.`, {\n            metaMessages: [\n                '- Address must be a hex value of 20 bytes (40 hex characters).',\n                '- Address must match its checksum counterpart.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidAddressError'\n        });\n    }\n}\n//# sourceMappingURL=address.js.map","import { SliceOffsetOutOfBoundsError, } from '../../errors/data.js';\nimport { isHex } from './isHex.js';\nimport { size } from './size.js';\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice(value, start, end, { strict } = {}) {\n    if (isHex(value, { strict: false }))\n        return sliceHex(value, start, end, {\n            strict,\n        });\n    return sliceBytes(value, start, end, {\n        strict,\n    });\n}\nfunction assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n        throw new SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: size(value),\n        });\n}\nfunction assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        size(value) !== end - start) {\n        throw new SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: size(value),\n        });\n    }\n}\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = value_.slice(start, end);\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = `0x${value_\n        .replace('0x', '')\n        .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}`;\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n//# sourceMappingURL=slice.js.map","import { keccak_256 } from '@noble/hashes/sha3';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function keccak256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = keccak_256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=keccak256.js.map","import { BaseError } from './base.js';\nexport class ChainDoesNotSupportContract extends BaseError {\n    constructor({ blockNumber, chain, contract, }) {\n        super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                ...(blockNumber &&\n                    contract.blockCreated &&\n                    contract.blockCreated > blockNumber\n                    ? [\n                        `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n                    ]\n                    : [\n                        `- The chain does not have the contract \"${contract.name}\" configured.`,\n                    ]),\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainDoesNotSupportContract'\n        });\n    }\n}\nexport class ChainMismatchError extends BaseError {\n    constructor({ chain, currentChainId, }) {\n        super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${currentChainId}`,\n                `Expected Chain ID: ${chain.id} – ${chain.name}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainMismatchError'\n        });\n    }\n}\nexport class ChainNotFoundError extends BaseError {\n    constructor() {\n        super([\n            'No chain was provided to the request.',\n            'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainNotFoundError'\n        });\n    }\n}\nexport class ClientChainNotConfiguredError extends BaseError {\n    constructor() {\n        super('No chain was provided to the Client.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ClientChainNotConfiguredError'\n        });\n    }\n}\nexport class InvalidChainIdError extends BaseError {\n    constructor({ chainId }) {\n        super(typeof chainId === 'number'\n            ? `Chain ID \"${chainId}\" is invalid.`\n            : 'Chain ID is invalid.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidChainIdError'\n        });\n    }\n}\n//# sourceMappingURL=chain.js.map","import { InvalidAddressError } from '../../errors/address.js';\nimport { stringToBytes, } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { LruMap } from '../lru.js';\nimport { isAddress } from './isAddress.js';\nexport const checksumAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function checksumAddress(address_, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (checksumAddressCache.has(`${address_}.${chainId}`))\n        return checksumAddressCache.get(`${address_}.${chainId}`);\n    const hexAddress = chainId\n        ? `${chainId}${address_.toLowerCase()}`\n        : address_.substring(2).toLowerCase();\n    const hash = keccak256(stringToBytes(hexAddress), 'bytes');\n    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');\n    for (let i = 0; i < 40; i += 2) {\n        if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n            address[i] = address[i].toUpperCase();\n        }\n        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n            address[i + 1] = address[i + 1].toUpperCase();\n        }\n    }\n    const result = `0x${address.join('')}`;\n    checksumAddressCache.set(`${address_}.${chainId}`, result);\n    return result;\n}\nexport function getAddress(address, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (!isAddress(address, { strict: false }))\n        throw new InvalidAddressError({ address });\n    return checksumAddress(address, chainId);\n}\n//# sourceMappingURL=getAddress.js.map","import { bytesToHex, numberToHex } from '../encoding/toHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const rpcTransactionType = {\n    legacy: '0x0',\n    eip2930: '0x1',\n    eip1559: '0x2',\n    eip4844: '0x3',\n};\nexport function formatTransactionRequest(request) {\n    const rpcRequest = {};\n    if (typeof request.accessList !== 'undefined')\n        rpcRequest.accessList = request.accessList;\n    if (typeof request.blobVersionedHashes !== 'undefined')\n        rpcRequest.blobVersionedHashes = request.blobVersionedHashes;\n    if (typeof request.blobs !== 'undefined') {\n        if (typeof request.blobs[0] !== 'string')\n            rpcRequest.blobs = request.blobs.map((x) => bytesToHex(x));\n        else\n            rpcRequest.blobs = request.blobs;\n    }\n    if (typeof request.data !== 'undefined')\n        rpcRequest.data = request.data;\n    if (typeof request.from !== 'undefined')\n        rpcRequest.from = request.from;\n    if (typeof request.gas !== 'undefined')\n        rpcRequest.gas = numberToHex(request.gas);\n    if (typeof request.gasPrice !== 'undefined')\n        rpcRequest.gasPrice = numberToHex(request.gasPrice);\n    if (typeof request.maxFeePerBlobGas !== 'undefined')\n        rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas);\n    if (typeof request.maxFeePerGas !== 'undefined')\n        rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n    if (typeof request.maxPriorityFeePerGas !== 'undefined')\n        rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n    if (typeof request.nonce !== 'undefined')\n        rpcRequest.nonce = numberToHex(request.nonce);\n    if (typeof request.to !== 'undefined')\n        rpcRequest.to = request.to;\n    if (typeof request.type !== 'undefined')\n        rpcRequest.type = rpcTransactionType[request.type];\n    if (typeof request.value !== 'undefined')\n        rpcRequest.value = numberToHex(request.value);\n    return rpcRequest;\n}\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter('transactionRequest', formatTransactionRequest);\n//# sourceMappingURL=transactionRequest.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const transactionType = {\n    '0x0': 'legacy',\n    '0x1': 'eip2930',\n    '0x2': 'eip1559',\n    '0x3': 'eip4844',\n};\nexport function formatTransaction(transaction) {\n    const transaction_ = {\n        ...transaction,\n        blockHash: transaction.blockHash ? transaction.blockHash : null,\n        blockNumber: transaction.blockNumber\n            ? BigInt(transaction.blockNumber)\n            : null,\n        chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n        gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n        gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n        maxFeePerBlobGas: transaction.maxFeePerBlobGas\n            ? BigInt(transaction.maxFeePerBlobGas)\n            : undefined,\n        maxFeePerGas: transaction.maxFeePerGas\n            ? BigInt(transaction.maxFeePerGas)\n            : undefined,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n            ? BigInt(transaction.maxPriorityFeePerGas)\n            : undefined,\n        nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n        to: transaction.to ? transaction.to : null,\n        transactionIndex: transaction.transactionIndex\n            ? Number(transaction.transactionIndex)\n            : null,\n        type: transaction.type\n            ? transactionType[transaction.type]\n            : undefined,\n        typeHex: transaction.type ? transaction.type : undefined,\n        value: transaction.value ? BigInt(transaction.value) : undefined,\n        v: transaction.v ? BigInt(transaction.v) : undefined,\n    };\n    transaction_.yParity = (() => {\n        // If `yParity` is provided, we will use it.\n        if (transaction.yParity)\n            return Number(transaction.yParity);\n        // If no `yParity` provided, try derive from `v`.\n        if (typeof transaction_.v === 'bigint') {\n            if (transaction_.v === 0n || transaction_.v === 27n)\n                return 0;\n            if (transaction_.v === 1n || transaction_.v === 28n)\n                return 1;\n            if (transaction_.v >= 35n)\n                return transaction_.v % 2n === 0n ? 1 : 0;\n        }\n        return undefined;\n    })();\n    if (transaction_.type === 'legacy') {\n        delete transaction_.accessList;\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n        delete transaction_.yParity;\n    }\n    if (transaction_.type === 'eip2930') {\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n    }\n    if (transaction_.type === 'eip1559') {\n        delete transaction_.maxFeePerBlobGas;\n    }\n    return transaction_;\n}\nexport const defineTransaction = /*#__PURE__*/ defineFormatter('transaction', formatTransaction);\n//# sourceMappingURL=transaction.js.map","export function formatLog(log, { args, eventName, } = {}) {\n    return {\n        ...log,\n        blockHash: log.blockHash ? log.blockHash : null,\n        blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n        logIndex: log.logIndex ? Number(log.logIndex) : null,\n        transactionHash: log.transactionHash ? log.transactionHash : null,\n        transactionIndex: log.transactionIndex\n            ? Number(log.transactionIndex)\n            : null,\n        ...(eventName ? { args, eventName } : {}),\n    };\n}\n//# sourceMappingURL=log.js.map","import { BaseError } from '../../errors/base.js';\nimport { createCursor, } from '../cursor.js';\nimport { hexToBytes } from './toBytes.js';\nimport { bytesToHex } from './toHex.js';\nexport function toRlp(bytes, to = 'hex') {\n    const encodable = getEncodable(bytes);\n    const cursor = createCursor(new Uint8Array(encodable.length));\n    encodable.encode(cursor);\n    if (to === 'hex')\n        return bytesToHex(cursor.bytes);\n    return cursor.bytes;\n}\nexport function bytesToRlp(bytes, to = 'bytes') {\n    return toRlp(bytes, to);\n}\nexport function hexToRlp(hex, to = 'hex') {\n    return toRlp(hex, to);\n}\nfunction getEncodable(bytes) {\n    if (Array.isArray(bytes))\n        return getEncodableList(bytes.map((x) => getEncodable(x)));\n    return getEncodableBytes(bytes);\n}\nfunction getEncodableList(list) {\n    const bodyLength = list.reduce((acc, x) => acc + x.length, 0);\n    const sizeOfBodyLength = getSizeOfLength(bodyLength);\n    const length = (() => {\n        if (bodyLength <= 55)\n            return 1 + bodyLength;\n        return 1 + sizeOfBodyLength + bodyLength;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bodyLength <= 55) {\n                cursor.pushByte(0xc0 + bodyLength);\n            }\n            else {\n                cursor.pushByte(0xc0 + 55 + sizeOfBodyLength);\n                if (sizeOfBodyLength === 1)\n                    cursor.pushUint8(bodyLength);\n                else if (sizeOfBodyLength === 2)\n                    cursor.pushUint16(bodyLength);\n                else if (sizeOfBodyLength === 3)\n                    cursor.pushUint24(bodyLength);\n                else\n                    cursor.pushUint32(bodyLength);\n            }\n            for (const { encode } of list) {\n                encode(cursor);\n            }\n        },\n    };\n}\nfunction getEncodableBytes(bytesOrHex) {\n    const bytes = typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex;\n    const sizeOfBytesLength = getSizeOfLength(bytes.length);\n    const length = (() => {\n        if (bytes.length === 1 && bytes[0] < 0x80)\n            return 1;\n        if (bytes.length <= 55)\n            return 1 + bytes.length;\n        return 1 + sizeOfBytesLength + bytes.length;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bytes.length === 1 && bytes[0] < 0x80) {\n                cursor.pushBytes(bytes);\n            }\n            else if (bytes.length <= 55) {\n                cursor.pushByte(0x80 + bytes.length);\n                cursor.pushBytes(bytes);\n            }\n            else {\n                cursor.pushByte(0x80 + 55 + sizeOfBytesLength);\n                if (sizeOfBytesLength === 1)\n                    cursor.pushUint8(bytes.length);\n                else if (sizeOfBytesLength === 2)\n                    cursor.pushUint16(bytes.length);\n                else if (sizeOfBytesLength === 3)\n                    cursor.pushUint24(bytes.length);\n                else\n                    cursor.pushUint32(bytes.length);\n                cursor.pushBytes(bytes);\n            }\n        },\n    };\n}\nfunction getSizeOfLength(length) {\n    if (length < 2 ** 8)\n        return 1;\n    if (length < 2 ** 16)\n        return 2;\n    if (length < 2 ** 24)\n        return 3;\n    if (length < 2 ** 32)\n        return 4;\n    throw new BaseError('Length is too large.');\n}\n//# sourceMappingURL=toRlp.js.map","import { defineFormatter } from './formatter.js';\nimport { formatTransaction } from './transaction.js';\nexport function formatBlock(block) {\n    const transactions = block.transactions?.map((transaction) => {\n        if (typeof transaction === 'string')\n            return transaction;\n        return formatTransaction(transaction);\n    });\n    return {\n        ...block,\n        baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n        blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n        difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n        excessBlobGas: block.excessBlobGas\n            ? BigInt(block.excessBlobGas)\n            : undefined,\n        gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n        gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n        hash: block.hash ? block.hash : null,\n        logsBloom: block.logsBloom ? block.logsBloom : null,\n        nonce: block.nonce ? block.nonce : null,\n        number: block.number ? BigInt(block.number) : null,\n        size: block.size ? BigInt(block.size) : undefined,\n        timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n        transactions,\n        totalDifficulty: block.totalDifficulty\n            ? BigInt(block.totalDifficulty)\n            : null,\n    };\n}\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock);\n//# sourceMappingURL=block.js.map","import { gweiUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei, unit = 'wei') {\n    return formatUnits(wei, gweiUnits[unit]);\n}\n//# sourceMappingURL=formatGwei.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nimport { formatLog } from './log.js';\nimport { transactionType } from './transaction.js';\nexport const receiptStatuses = {\n    '0x0': 'reverted',\n    '0x1': 'success',\n};\nexport function formatTransactionReceipt(transactionReceipt) {\n    const receipt = {\n        ...transactionReceipt,\n        blockNumber: transactionReceipt.blockNumber\n            ? BigInt(transactionReceipt.blockNumber)\n            : null,\n        contractAddress: transactionReceipt.contractAddress\n            ? transactionReceipt.contractAddress\n            : null,\n        cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n            ? BigInt(transactionReceipt.cumulativeGasUsed)\n            : null,\n        effectiveGasPrice: transactionReceipt.effectiveGasPrice\n            ? BigInt(transactionReceipt.effectiveGasPrice)\n            : null,\n        gasUsed: transactionReceipt.gasUsed\n            ? BigInt(transactionReceipt.gasUsed)\n            : null,\n        logs: transactionReceipt.logs\n            ? transactionReceipt.logs.map((log) => formatLog(log))\n            : null,\n        to: transactionReceipt.to ? transactionReceipt.to : null,\n        transactionIndex: transactionReceipt.transactionIndex\n            ? hexToNumber(transactionReceipt.transactionIndex)\n            : null,\n        status: transactionReceipt.status\n            ? receiptStatuses[transactionReceipt.status]\n            : null,\n        type: transactionReceipt.type\n            ? transactionType[transactionReceipt.type] || transactionReceipt.type\n            : null,\n    };\n    if (transactionReceipt.blobGasPrice)\n        receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice);\n    if (transactionReceipt.blobGasUsed)\n        receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed);\n    return receipt;\n}\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter('transactionReceipt', formatTransactionReceipt);\n//# sourceMappingURL=transactionReceipt.js.map","import { versionedHashVersionKzg } from '../../constants/kzg.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { EmptyBlobError, InvalidVersionedHashSizeError, InvalidVersionedHashVersionError, } from '../../errors/blob.js';\nimport { InvalidChainIdError, } from '../../errors/chain.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError, } from '../../errors/node.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { size } from '../data/size.js';\nimport { slice } from '../data/slice.js';\nimport { hexToNumber } from '../encoding/fromHex.js';\nexport function assertTransactionEIP4844(transaction) {\n    const { blobVersionedHashes } = transaction;\n    if (blobVersionedHashes) {\n        if (blobVersionedHashes.length === 0)\n            throw new EmptyBlobError();\n        for (const hash of blobVersionedHashes) {\n            const size_ = size(hash);\n            const version = hexToNumber(slice(hash, 0, 1));\n            if (size_ !== 32)\n                throw new InvalidVersionedHashSizeError({ hash, size: size_ });\n            if (version !== versionedHashVersionKzg)\n                throw new InvalidVersionedHashVersionError({\n                    hash,\n                    version,\n                });\n        }\n    }\n    assertTransactionEIP1559(transaction);\n}\nexport function assertTransactionEIP1559(transaction) {\n    const { chainId, maxPriorityFeePerGas, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (maxPriorityFeePerGas &&\n        maxFeePerGas &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n}\nexport function assertTransactionEIP2930(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.');\n    if (gasPrice && gasPrice > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n}\nexport function assertTransactionLegacy(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to, accessList, } = transaction;\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (typeof chainId !== 'undefined' && chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.');\n    if (gasPrice && gasPrice > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n    if (accessList)\n        throw new BaseError('`accessList` is not a valid Legacy Transaction attribute.');\n}\n//# sourceMappingURL=assertTransaction.js.map","import { InvalidLegacyVError, } from '../../errors/transaction.js';\nimport { blobsToCommitments, } from '../blob/blobsToCommitments.js';\nimport { blobsToProofs, } from '../blob/blobsToProofs.js';\nimport { commitmentsToVersionedHashes, } from '../blob/commitmentsToVersionedHashes.js';\nimport { toBlobSidecars, } from '../blob/toBlobSidecars.js';\nimport { concatHex } from '../data/concat.js';\nimport { trim } from '../data/trim.js';\nimport { bytesToHex, toHex } from '../encoding/toHex.js';\nimport { toRlp } from '../encoding/toRlp.js';\nimport { assertTransactionEIP1559, assertTransactionEIP2930, assertTransactionEIP4844, assertTransactionLegacy, } from './assertTransaction.js';\nimport { getTransactionType, } from './getTransactionType.js';\nimport { serializeAccessList, } from './serializeAccessList.js';\nexport function serializeTransaction(transaction, signature) {\n    const type = getTransactionType(transaction);\n    if (type === 'eip1559')\n        return serializeTransactionEIP1559(transaction, signature);\n    if (type === 'eip2930')\n        return serializeTransactionEIP2930(transaction, signature);\n    if (type === 'eip4844')\n        return serializeTransactionEIP4844(transaction, signature);\n    return serializeTransactionLegacy(transaction, signature);\n}\nfunction serializeTransactionEIP4844(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP4844(transaction);\n    let blobVersionedHashes = transaction.blobVersionedHashes;\n    let sidecars = transaction.sidecars;\n    // If `blobs` are passed, we will need to compute the KZG commitments & proofs.\n    if (transaction.blobs &&\n        (typeof blobVersionedHashes === 'undefined' ||\n            typeof sidecars === 'undefined')) {\n        const blobs = (typeof transaction.blobs[0] === 'string'\n            ? transaction.blobs\n            : transaction.blobs.map((x) => bytesToHex(x)));\n        const kzg = transaction.kzg;\n        const commitments = blobsToCommitments({\n            blobs,\n            kzg,\n        });\n        if (typeof blobVersionedHashes === 'undefined')\n            blobVersionedHashes = commitmentsToVersionedHashes({\n                commitments,\n            });\n        if (typeof sidecars === 'undefined') {\n            const proofs = blobsToProofs({ blobs, commitments, kzg });\n            sidecars = toBlobSidecars({ blobs, commitments, proofs });\n        }\n    }\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        maxFeePerBlobGas ? toHex(maxFeePerBlobGas) : '0x',\n        blobVersionedHashes ?? [],\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    const blobs = [];\n    const commitments = [];\n    const proofs = [];\n    if (sidecars)\n        for (let i = 0; i < sidecars.length; i++) {\n            const { blob, commitment, proof } = sidecars[i];\n            blobs.push(blob);\n            commitments.push(commitment);\n            proofs.push(proof);\n        }\n    return concatHex([\n        '0x03',\n        sidecars\n            ? // If sidecars are enabled, envelope turns into a \"wrapper\":\n                toRlp([serializedTransaction, blobs, commitments, proofs])\n            : // If sidecars are disabled, standard envelope is used:\n                toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP1559(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP1559(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x02',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP2930(transaction, signature) {\n    const { chainId, gas, data, nonce, to, value, accessList, gasPrice } = transaction;\n    assertTransactionEIP2930(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        gasPrice ? toHex(gasPrice) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x01',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionLegacy(transaction, signature) {\n    const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction;\n    assertTransactionLegacy(transaction);\n    let serializedTransaction = [\n        nonce ? toHex(nonce) : '0x',\n        gasPrice ? toHex(gasPrice) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n    ];\n    if (signature) {\n        const v = (() => {\n            // EIP-155 (inferred chainId)\n            if (signature.v >= 35n) {\n                const inferredChainId = (signature.v - 35n) / 2n;\n                if (inferredChainId > 0)\n                    return signature.v;\n                return 27n + (signature.v === 35n ? 0n : 1n);\n            }\n            // EIP-155 (explicit chainId)\n            if (chainId > 0)\n                return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n);\n            // Pre-EIP-155 (no chainId)\n            const v = 27n + (signature.v === 27n ? 0n : 1n);\n            if (signature.v !== v)\n                throw new InvalidLegacyVError({ v: signature.v });\n            return v;\n        })();\n        serializedTransaction = [\n            ...serializedTransaction,\n            toHex(v),\n            signature.r,\n            signature.s,\n        ];\n    }\n    else if (chainId > 0) {\n        serializedTransaction = [\n            ...serializedTransaction,\n            toHex(chainId),\n            '0x',\n            '0x',\n        ];\n    }\n    return toRlp(serializedTransaction);\n}\nexport function toYParitySignatureArray(transaction, signature) {\n    const { r, s, v, yParity } = signature ?? transaction;\n    if (typeof r === 'undefined')\n        return [];\n    if (typeof s === 'undefined')\n        return [];\n    if (typeof v === 'undefined' && typeof yParity === 'undefined')\n        return [];\n    const yParity_ = (() => {\n        if (typeof yParity === 'number')\n            return yParity ? toHex(1) : '0x';\n        if (v === 0n)\n            return '0x';\n        if (v === 1n)\n            return toHex(1);\n        return v === 27n ? '0x' : toHex(1);\n    })();\n    return [yParity_, trim(r), trim(s)];\n}\n//# sourceMappingURL=serializeTransaction.js.map","import { NegativeOffsetError, PositionOutOfBoundsError, RecursiveReadLimitExceededError, } from '../errors/cursor.js';\nconst staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n        if (this.recursiveReadCount >= this.recursiveReadLimit)\n            throw new RecursiveReadLimitExceededError({\n                count: this.recursiveReadCount + 1,\n                limit: this.recursiveReadLimit,\n            });\n    },\n    assertPosition(position) {\n        if (position < 0 || position > this.bytes.length - 1)\n            throw new PositionOutOfBoundsError({\n                length: this.bytes.length,\n                position,\n            });\n    },\n    decrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position - offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    getReadCount(position) {\n        return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position + offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    inspectByte(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + length - 1);\n        return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectUint16(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 1);\n        return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 2);\n        return ((this.dataView.getUint16(position) << 8) +\n            this.dataView.getUint8(position + 2));\n    },\n    inspectUint32(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 3);\n        return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = byte;\n        this.position++;\n    },\n    pushBytes(bytes) {\n        this.assertPosition(this.position + bytes.length - 1);\n        this.bytes.set(bytes, this.position);\n        this.position += bytes.length;\n    },\n    pushUint8(value) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = value;\n        this.position++;\n    },\n    pushUint16(value) {\n        this.assertPosition(this.position + 1);\n        this.dataView.setUint16(this.position, value);\n        this.position += 2;\n    },\n    pushUint24(value) {\n        this.assertPosition(this.position + 2);\n        this.dataView.setUint16(this.position, value >> 8);\n        this.dataView.setUint8(this.position + 2, value & ~4294967040);\n        this.position += 3;\n    },\n    pushUint32(value) {\n        this.assertPosition(this.position + 3);\n        this.dataView.setUint32(this.position, value);\n        this.position += 4;\n    },\n    readByte() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectByte();\n        this.position++;\n        return value;\n    },\n    readBytes(length, size) {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectBytes(length);\n        this.position += size ?? length;\n        return value;\n    },\n    readUint8() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint8();\n        this.position += 1;\n        return value;\n    },\n    readUint16() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint16();\n        this.position += 2;\n        return value;\n    },\n    readUint24() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint24();\n        this.position += 3;\n        return value;\n    },\n    readUint32() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint32();\n        this.position += 4;\n        return value;\n    },\n    get remaining() {\n        return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n        const oldPosition = this.position;\n        this.assertPosition(position);\n        this.position = position;\n        return () => (this.position = oldPosition);\n    },\n    _touch() {\n        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)\n            return;\n        const count = this.getReadCount();\n        this.positionReadCount.set(this.position, count + 1);\n        if (count > 0)\n            this.recursiveReadCount++;\n    },\n};\nexport function createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {\n    const cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n}\n//# sourceMappingURL=cursor.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = [];\n    for (const blob of blobs)\n        commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)));\n    return (to === 'bytes'\n        ? commitments\n        : commitments.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToCommitments.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = (typeof parameters.commitments[0] === 'string'\n        ? parameters.commitments.map((x) => hexToBytes(x))\n        : parameters.commitments);\n    const proofs = [];\n    for (let i = 0; i < blobs.length; i++) {\n        const blob = blobs[i];\n        const commitment = commitments[i];\n        proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)));\n    }\n    return (to === 'bytes'\n        ? proofs\n        : proofs.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToProofs.js.map","import { blobsToCommitments, } from './blobsToCommitments.js';\nimport { blobsToProofs } from './blobsToProofs.js';\nimport { toBlobs } from './toBlobs.js';\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars(parameters) {\n    const { data, kzg, to } = parameters;\n    const blobs = parameters.blobs ?? toBlobs({ data: data, to });\n    const commitments = parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg, to });\n    const proofs = parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg, to });\n    const sidecars = [];\n    for (let i = 0; i < blobs.length; i++)\n        sidecars.push({\n            blob: blobs[i],\n            commitment: commitments[i],\n            proof: proofs[i],\n        });\n    return sidecars;\n}\n//# sourceMappingURL=toBlobSidecars.js.map","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapXOFConstructorWithOpts = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexports.utf8ToBytes = utf8ToBytes;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\nconst toStr = {}.toString;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\nexports.randomBytes = randomBytes;\n//# sourceMappingURL=utils.js.map","export function defineFormatter(type, format) {\n    return ({ exclude, format: overrides, }) => {\n        return {\n            exclude,\n            format: (args) => {\n                const formatted = format(args);\n                if (exclude) {\n                    for (const key of exclude) {\n                        delete formatted[key];\n                    }\n                }\n                return {\n                    ...formatted,\n                    ...overrides(args),\n                };\n            },\n            type,\n        };\n    };\n}\n//# sourceMappingURL=formatter.js.map","import { commitmentToVersionedHash, } from './commitmentToVersionedHash.js';\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes(parameters) {\n    const { commitments, version } = parameters;\n    const to = parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes');\n    const hashes = [];\n    for (const commitment of commitments) {\n        hashes.push(commitmentToVersionedHash({\n            commitment,\n            to,\n            version,\n        }));\n    }\n    return hashes;\n}\n//# sourceMappingURL=commitmentsToVersionedHashes.js.map","import { bytesToHex } from '../encoding/toHex.js';\nimport { sha256 } from '../hash/sha256.js';\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash(parameters) {\n    const { commitment, version = 1 } = parameters;\n    const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes');\n    const versionedHash = sha256(commitment, 'bytes');\n    versionedHash.set([version], 0);\n    return (to === 'bytes' ? versionedHash : bytesToHex(versionedHash));\n}\n//# sourceMappingURL=commitmentToVersionedHash.js.map","import { sha256 as noble_sha256 } from '@noble/hashes/sha256';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function sha256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = noble_sha256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=sha256.js.map","import { InvalidSerializableTransactionError, } from '../../errors/transaction.js';\nexport function getTransactionType(transaction) {\n    if (transaction.type)\n        return transaction.type;\n    if (typeof transaction.blobs !== 'undefined' ||\n        typeof transaction.blobVersionedHashes !== 'undefined' ||\n        typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n        typeof transaction.sidecars !== 'undefined')\n        return 'eip4844';\n    if (typeof transaction.maxFeePerGas !== 'undefined' ||\n        typeof transaction.maxPriorityFeePerGas !== 'undefined') {\n        return 'eip1559';\n    }\n    if (typeof transaction.gasPrice !== 'undefined') {\n        if (typeof transaction.accessList !== 'undefined')\n            return 'eip2930';\n        return 'legacy';\n    }\n    throw new InvalidSerializableTransactionError({ transaction });\n}\n//# sourceMappingURL=getTransactionType.js.map","import { InvalidAddressError, } from '../../errors/address.js';\nimport { InvalidStorageKeySizeError, } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\n/*\n * Serialize an  EIP-2930 access list\n * @remarks\n * Use to create a transaction serializer with support for EIP-2930 access lists\n *\n * @param accessList - Array of objects of address and arrays of Storage Keys\n * @throws InvalidAddressError, InvalidStorageKeySizeError\n * @returns Array of hex strings\n */\nexport function serializeAccessList(accessList) {\n    if (!accessList || accessList.length === 0)\n        return [];\n    const serializedAccessList = [];\n    for (let i = 0; i < accessList.length; i++) {\n        const { address, storageKeys } = accessList[i];\n        for (let j = 0; j < storageKeys.length; j++) {\n            if (storageKeys[j].length - 2 !== 64) {\n                throw new InvalidStorageKeySizeError({ storageKey: storageKeys[j] });\n            }\n        }\n        if (!isAddress(address, { strict: false })) {\n            throw new InvalidAddressError({ address });\n        }\n        serializedAccessList.push([address, storageKeys]);\n    }\n    return serializedAccessList;\n}\n//# sourceMappingURL=serializeAccessList.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** Blob limit per transaction. */\nexport const blobsPerTransaction = 6;\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32;\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096;\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob;\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction = bytesPerBlob * blobsPerTransaction -\n    // terminator byte (0x80).\n    1 -\n    // zero byte (0x00) appended to each field element.\n    1 * fieldElementsPerBlob * blobsPerTransaction;\n//# sourceMappingURL=blob.js.map","import { bytesPerBlob, bytesPerFieldElement, fieldElementsPerBlob, maxBytesPerTransaction, } from '../../constants/blob.js';\nimport { BlobSizeTooLargeError, EmptyBlobError, } from '../../errors/blob.js';\nimport { createCursor } from '../cursor.js';\nimport { size } from '../data/size.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs(parameters) {\n    const to = parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes');\n    const data = (typeof parameters.data === 'string'\n        ? hexToBytes(parameters.data)\n        : parameters.data);\n    const size_ = size(data);\n    if (!size_)\n        throw new EmptyBlobError();\n    if (size_ > maxBytesPerTransaction)\n        throw new BlobSizeTooLargeError({\n            maxSize: maxBytesPerTransaction,\n            size: size_,\n        });\n    const blobs = [];\n    let active = true;\n    let position = 0;\n    while (active) {\n        const blob = createCursor(new Uint8Array(bytesPerBlob));\n        let size = 0;\n        while (size < fieldElementsPerBlob) {\n            const bytes = data.slice(position, position + (bytesPerFieldElement - 1));\n            // Push a zero byte so the field element doesn't overflow the BLS modulus.\n            blob.pushByte(0x00);\n            // Push the current segment of data bytes.\n            blob.pushBytes(bytes);\n            // If we detect that the current segment of data bytes is less than 31 bytes,\n            // we can stop processing and push a terminator byte to indicate the end of the blob.\n            if (bytes.length < 31) {\n                blob.pushByte(0x80);\n                active = false;\n                break;\n            }\n            size++;\n            position += 31;\n        }\n        blobs.push(blob);\n    }\n    return (to === 'bytes'\n        ? blobs.map((x) => x.bytes)\n        : blobs.map((x) => bytesToHex(x.bytes)));\n}\n//# sourceMappingURL=toBlobs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = { number, bool, bytes, hash, exists, output };\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap extends Map {\n    constructor(size) {\n        super();\n        Object.defineProperty(this, \"maxSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxSize = size;\n    }\n    set(key, value) {\n        super.set(key, value);\n        if (this.maxSize && this.size > this.maxSize)\n            this.delete(this.keys().next().value);\n        return this;\n    }\n}\n//# sourceMappingURL=lru.js.map","import { BaseError } from './base.js';\nexport class NegativeOffsetError extends BaseError {\n    constructor({ offset }) {\n        super(`Offset \\`${offset}\\` cannot be negative.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NegativeOffsetError'\n        });\n    }\n}\nexport class PositionOutOfBoundsError extends BaseError {\n    constructor({ length, position }) {\n        super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PositionOutOfBoundsError'\n        });\n    }\n}\nexport class RecursiveReadLimitExceededError extends BaseError {\n    constructor({ count, limit }) {\n        super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'RecursiveReadLimitExceededError'\n        });\n    }\n}\n//# sourceMappingURL=cursor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        (0, _assert_js_1.exists)(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.output)(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n//# sourceMappingURL=_sha2.js.map","import { versionedHashVersionKzg } from '../constants/kzg.js';\nimport { BaseError } from './base.js';\nexport class BlobSizeTooLargeError extends BaseError {\n    constructor({ maxSize, size }) {\n        super('Blob size is too large.', {\n            metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BlobSizeTooLargeError'\n        });\n    }\n}\nexport class EmptyBlobError extends BaseError {\n    constructor() {\n        super('Blob data must not be empty.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'EmptyBlobError'\n        });\n    }\n}\nexport class InvalidVersionedHashSizeError extends BaseError {\n    constructor({ hash, size, }) {\n        super(`Versioned hash \"${hash}\" size is invalid.`, {\n            metaMessages: ['Expected: 32', `Received: ${size}`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidVersionedHashSizeError'\n        });\n    }\n}\nexport class InvalidVersionedHashVersionError extends BaseError {\n    constructor({ hash, version, }) {\n        super(`Versioned hash \"${hash}\" version is invalid.`, {\n            metaMessages: [\n                `Expected: ${versionedHashVersionKzg}`,\n                `Received: ${version}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidVersionedHashVersionError'\n        });\n    }\n}\n//# sourceMappingURL=blob.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** The number of bytes in a KZG commitment. */\nexport const bytesPerCommitment = 48;\n/** The number of bytes in a KZG proof. */\nexport const bytesPerProof = 48;\nexport const versionedHashVersionKzg = 1;\n//# sourceMappingURL=kzg.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0, _u64_js_1.split)(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBH)(h, l, s) : (0, _u64_js_1.rotlSH)(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBL)(h, l, s) : (0, _u64_js_1.rotlSL)(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        (0, _assert_js_1.number)(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        (0, _assert_js_1.exists)(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        (0, _assert_js_1.exists)(this, false);\n        (0, _assert_js_1.bytes)(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        (0, _assert_js_1.number)(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        (0, _assert_js_1.output)(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add5L = exports.add5H = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.add = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nexports.shrSH = shrSH;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.shrSL = shrSL;\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexports.rotrSH = rotrSH;\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.rotrSL = rotrSL;\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexports.rotrBH = rotrBH;\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\nexports.rotrBL = rotrBL;\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nexports.rotr32H = rotr32H;\nconst rotr32L = (h, _l) => h;\nexports.rotr32L = rotr32L;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexports.rotlSH = rotlSH;\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\nexports.rotlSL = rotlSL;\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexports.rotlBH = rotlBH;\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\nexports.rotlBL = rotlBL;\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexports.add3L = add3L;\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexports.add3H = add3H;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexports.add4L = add4L;\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexports.add4H = add4H;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexports.add5L = add5L;\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\nexports.add5H = add5H;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n//# sourceMappingURL=_u64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha224 = exports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\nexports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());\n//# sourceMappingURL=sha256.js.map"],"sourceRoot":""}