(this.webpackJsonpKintsugi=this.webpackJsonpKintsugi||[]).push([[34],{1819:function(e){e.exports=JSON.parse('[{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"address[][]","name":"spenders","type":"address[][]"},{"internalType":"address","name":"owner","type":"address"}],"name":"getAllowances","outputs":[{"components":[{"internalType":"uint256[]","name":"allowances","type":"uint256[]"}],"internalType":"struct AllowanceInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"address[][]","name":"spenders","type":"address[][]"},{"internalType":"address","name":"owner","type":"address"}],"name":"getAllowancesFlat","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"boosts","type":"address[]"},{"internalType":"address","name":"owner","type":"address"}],"name":"getBoostOrGovBalance","outputs":[{"components":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"rewards","type":"uint256"}],"internalType":"struct BoostBalanceInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"govVaults","type":"address[]"},{"internalType":"address","name":"owner","type":"address"}],"name":"getGovVaultBalance","outputs":[{"components":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"rewards","type":"uint256"}],"internalType":"struct GovVaultBalanceInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"address","name":"owner","type":"address"}],"name":"getTokenBalances","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"}]')},3346:function(e,t,n){"use strict";n.r(t),n.d(t,"BalanceAPI",(function(){return l}));var a=n(1819),s=n(7),o=n.n(s),r=n(12),i=n(27),c=n(26),d=n(24);const p=a;class l{constructor(e,t){this.web3=e,this.chain=t}async fetchAllBalances(e,t,n,a,s){const o=new this.web3.eth.Contract(p,this.chain.fetchBalancesAddress),d=Object(c.c)(),l=[],u=[];for(const r of t)if(Object(i.a)(r))u.push(r);else{if(!Object(i.b)(r))throw new Error("Token type unsupported");l.push(r)}const y=Object(r.chunk)(u,d),m=Object(r.chunk)(n,d),b=Object(r.chunk)(a,d),w=b.map((e=>o.methods.getBoostOrGovBalance(e.map((e=>e.earnContractAddress)),s).call())),h=m.map((e=>o.methods.getBoostOrGovBalance(e.map((e=>e.earnContractAddress)),s).call())),f=y.map((e=>o.methods.getTokenBalances(e.map((e=>e.address)),s).call())),T=l.map((e=>this.web3.eth.getBalance(s))),B=await Promise.all([...w,...h,...f,...T]),k={tokens:[],govVaults:[],boosts:[]};let v=0;for(const r of b){const t=B[v].map(((t,n)=>this.boostFormatter(e,t,r[n])));k.boosts=k.boosts.concat(t),v++}for(const r of m){const t=B[v].map(((t,n)=>this.govVaultFormatter(e,t,r[n])));k.govVaults=k.govVaults.concat(t),v++}for(const r of y){const e=B[v].map(((e,t)=>this.erc20TokenFormatter(e,r[t])));k.tokens=k.tokens.concat(e),v++}for(const r of l){const e=this.nativeTokenFormatter(B[v],r);k.tokens.push(e),v++}return k}erc20TokenFormatter(e,t){const n=new o.a(e);return{tokenAddress:t.address,amount:n.shiftedBy(-t.decimals)}}nativeTokenFormatter(e,t){const n=new o.a(e);return{tokenAddress:t.address,amount:n.shiftedBy(-t.decimals)}}govVaultFormatter(e,t,n){const a=Object(d.f)(e,n.id),s=Object(d.i)(e,n.id),r=new o.a(t.balance),i=new o.a(t.rewards);return{vaultId:n.id,balance:r.shiftedBy(-a.decimals),rewards:i.shiftedBy(-s.decimals)}}boostFormatter(e,t,n){const a=Object(d.b)(e,n.id),s=Object(d.c)(e,n.id),r=new o.a(t.balance),i=new o.a(t.rewards);return{boostId:n.id,balance:r.shiftedBy(-a.decimals),rewards:i.shiftedBy(-s.decimals)}}}}}]);
//# sourceMappingURL=34.54862bc6.chunk.js.map