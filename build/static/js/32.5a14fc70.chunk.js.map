{"version":3,"sources":["components/StatLoader/StatLoader.tsx","components/Header/components/WalletContainer/WalletContainer.tsx","components/Header/components/WalletContainer/styles.tsx"],"names":["StatLoader","_ref","backgroundColor","foregroundColor","_jsx","ContentLoader","width","height","viewBox","children","x","y","useStyles","makeStyles","theme","container","display","justifyContent","alignItems","borderRadius","flexWrap","padding","cursor","address","typography","whiteSpace","textOverflow","overflow","disconnected","background","palette","cta","color","text","primary","known","border","marginRight","secondary","borderColor","connected","loading","paddingTop","blurred","filter","WalletContainer","connect","state","isWalletConnected","selectIsWalletConnected","walletAddress","selectIsWalletKnown","selectWalletAddress","walletPending","selectIsWalletPending","walletProfileUrl","user","wallet","profilePictureUrl","selectIsBalanceHidden","ens","selectEns","useTheme","classes","dispatch","useAppDispatch","t","useTranslation","formControlProps","noValidate","autoComplete","onClick","handleWalletConnect","doDisconnectWallet","askForWalletConnection","React","useEffect","getEns","Box","className","clsx","FormControl","Grid","direction","light","dark","_jsxs","Fragment","Avatar","src","formatEns","formatAddressShort"],"mappings":"oKAGO,MAAMA,EAAaC,IAAmE,IAAlE,gBAAEC,EAAkB,UAAS,gBAAEC,EAAkB,WAAWF,EACrF,OACEG,cAACC,IAAa,CACZC,MAAO,GACPC,OAAQ,GACRC,QAAQ,YACRN,gBAAiBA,EACjBC,gBAAiBA,EAAgBM,SAEjCL,cAAA,QAAMM,EAAE,IAAIC,EAAE,IAAIL,MAAM,KAAKC,OAAO,QACtB,C,yPCYpB,MAAMK,EAAYC,aCvBKC,IAAY,CACjCC,UAAW,CACTT,MAAO,OACPC,OAAQ,GACRS,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,aAAc,MACd,uBAAwB,CACtBC,SAAU,UACVC,QAAS,WACTC,OAAQ,YAGZC,QAAS,IACJT,EAAMU,WAAW,eACpBC,WAAY,SACZC,aAAc,WACdC,SAAU,UAEZC,aAAc,CACZZ,QAAS,OACTC,eAAgB,SAChBY,WAAYf,EAAMgB,QAAQD,WAAWE,IACrC,aAAc,CACZC,MAAOlB,EAAMgB,QAAQG,KAAKC,QAC1BR,aAAc,SAGlBS,MAAO,CACLC,OAAO,oBACP,oBAAqB,CACnB7B,OAAQ,OACRD,MAAO,OACP+B,YAAa,OAEf,aAAc,CACZL,MAAOlB,EAAMgB,QAAQG,KAAKK,WAE5B,UAAW,CACTC,YAAa,YAGjBC,UAAW,CACTD,YAAazB,EAAMgB,QAAQD,WAAWE,KAExCU,QAAS,CACPC,WAAY,OAEdC,QAAS,CACPC,OAAQ,mBDzBCC,EAAkBC,aAASC,IAQ/B,CAAEC,kBAPiBC,YAAwBF,GAOtBG,cANNC,YAAoBJ,GACJK,YAAoBL,GAAS,KAKxBM,cAJrBC,YAAsBP,GAIcQ,iBAHjCR,EAAMS,KAAKC,OAAOC,kBAGiCf,QAF5DgB,YAAsBZ,GAE+Ca,IADzEC,YAAUd,MAPOD,EAU7B7C,IAcO,IAdN,kBACC+C,EAAiB,cACjBE,EAAa,cACbG,EAAa,iBACbE,EAAgB,QAChBZ,EAAO,IACPiB,GAQD3D,EACC,MAAMa,EAAQgD,cACRC,EAAUnD,IACVoD,EAAWC,eACX,EAAEC,GAAMC,cAURC,EAAmB,CACvBC,YAAY,EACZC,aAAc,MACdC,QAX0BC,KAExBR,EADEd,EACOuB,cAEAC,cACX,GAeF,OANAC,IAAMC,WAAU,KACV1B,GACFc,EAASa,YAAO,CAAEtD,QAAS2B,IAC7B,GACC,CAACc,EAAUd,IAGZ9C,cAAC0E,IAAG,CACFC,UAAWC,kBAAK,CACd,CAACjB,EAAQhD,YAAY,EACrB,CAACgD,EAAQ5B,SAAUe,EACnB,CAACa,EAAQvB,WAAYQ,EACrB,CAACe,EAAQnC,eAAgBsB,IACxBzC,SAEHL,cAAC6E,IAAW,IAAKb,EAAgB3D,SAC/BL,cAAC8E,IAAI,CAACnE,WAAS,EAACoE,UAAU,MAAMjE,WAAW,SAAQT,SAChD4C,EACCjD,cAAC0E,IAAG,CAACC,UAAWhB,EAAQtB,QAAQhC,SAC9BL,cAACJ,IAAU,CACTG,gBAAiBW,EAAMgB,QAAQI,QAAQkD,MACvClF,gBAAiBY,EAAMgB,QAAQI,QAAQmD,SAI3CC,eAACX,IAAMY,SAAQ,CAAA9E,SAAA,CACZ8C,EACCnD,cAACoF,IAAM,CAACT,UAAWC,kBAAK,CAAE,CAACjB,EAAQpB,SAAUA,IAAY8C,IAAKlC,IAE9D,GAEFnD,cAAA,OAAK2E,UAAWC,kBAAKjB,EAAQxC,QAAS,CAAE,CAACwC,EAAQpB,SAAUA,IAAWlC,SACnEyC,EACGU,EACE8B,YAAU9B,GACV+B,YAAmBzC,GACrBgB,EAAE,mCAMZ,G","file":"static/js/32.5a14fc70.chunk.js","sourcesContent":["import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const StatLoader = ({ backgroundColor = '#313759', foregroundColor = '#8585A6' }) => {\n  return (\n    <ContentLoader\n      width={64}\n      height={16}\n      viewBox=\"0 0 64 16\"\n      backgroundColor={backgroundColor}\n      foregroundColor={foregroundColor}\n    >\n      <rect x=\"0\" y=\"0\" width=\"64\" height=\"16\" />\n    </ContentLoader>\n  );\n};\n","import React from 'react';\nimport { Avatar, Box, FormControl, Grid, makeStyles } from '@material-ui/core';\nimport { styles } from './styles';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { StatLoader } from '../../../StatLoader';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n  selectEns,\n  selectIsBalanceHidden,\n  selectIsWalletConnected,\n  selectIsWalletKnown,\n  selectWalletAddress,\n} from '../../../../features/data/selectors/wallet';\nimport { BeefyState } from '../../../../redux-types';\nimport {\n  askForWalletConnection,\n  doDisconnectWallet,\n  getEns,\n} from '../../../../features/data/actions/wallet';\nimport { selectIsWalletPending } from '../../../../features/data/selectors/data-loader';\nimport clsx from 'clsx';\nimport { useAppDispatch } from '../../../../store';\nimport { formatAddressShort, formatEns } from '../../../../helpers/format';\n\nconst useStyles = makeStyles(styles);\n\nexport const WalletContainer = connect((state: BeefyState) => {\n  const isWalletConnected = selectIsWalletConnected(state);\n  const isWalletKnown = selectIsWalletKnown(state);\n  const walletAddress = isWalletKnown ? selectWalletAddress(state) : null;\n  const walletPending = selectIsWalletPending(state);\n  const walletProfileUrl = state.user.wallet.profilePictureUrl;\n  const blurred = selectIsBalanceHidden(state);\n  const ens = selectEns(state);\n  return { isWalletConnected, walletAddress, walletPending, walletProfileUrl, blurred, ens };\n})(\n  ({\n    isWalletConnected,\n    walletAddress,\n    walletPending,\n    walletProfileUrl,\n    blurred,\n    ens,\n  }: {\n    isWalletConnected: boolean;\n    walletAddress: null | string;\n    walletPending: boolean;\n    walletProfileUrl: null | string;\n    blurred: boolean;\n    ens: string | null;\n  }) => {\n    const theme = useTheme();\n    const classes = useStyles();\n    const dispatch = useAppDispatch();\n    const { t } = useTranslation();\n\n    const handleWalletConnect = () => {\n      if (walletAddress) {\n        dispatch(doDisconnectWallet());\n      } else {\n        dispatch(askForWalletConnection());\n      }\n    };\n\n    const formControlProps = {\n      noValidate: true,\n      autoComplete: 'off',\n      onClick: handleWalletConnect,\n    };\n\n    React.useEffect(() => {\n      if (walletAddress) {\n        dispatch(getEns({ address: walletAddress }));\n      }\n    }, [dispatch, walletAddress]);\n\n    return (\n      <Box\n        className={clsx({\n          [classes.container]: true,\n          [classes.known]: !!walletAddress,\n          [classes.connected]: isWalletConnected,\n          [classes.disconnected]: !walletAddress,\n        })}\n      >\n        <FormControl {...formControlProps}>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            {walletPending ? (\n              <Box className={classes.loading}>\n                <StatLoader\n                  foregroundColor={theme.palette.primary.light}\n                  backgroundColor={theme.palette.primary.dark}\n                />\n              </Box>\n            ) : (\n              <React.Fragment>\n                {walletProfileUrl ? (\n                  <Avatar className={clsx({ [classes.blurred]: blurred })} src={walletProfileUrl} />\n                ) : (\n                  ''\n                )}\n                <div className={clsx(classes.address, { [classes.blurred]: blurred })}>\n                  {walletAddress\n                    ? ens\n                      ? formatEns(ens)\n                      : formatAddressShort(walletAddress)\n                    : t('Network-ConnectWallet')}\n                </div>\n              </React.Fragment>\n            )}\n          </Grid>\n        </FormControl>\n      </Box>\n    );\n  }\n);\n","import { Theme } from '@material-ui/core';\n\nexport const styles = (theme: Theme) => ({\n  container: {\n    width: '100%',\n    height: 40,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '8px',\n    '& .MuiGrid-container': {\n      flexWrap: 'inherit',\n      padding: '8px 16px',\n      cursor: 'pointer',\n    },\n  },\n  address: {\n    ...theme.typography['body-lg-med'],\n    whiteSpace: 'nowrap' as const,\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n  disconnected: {\n    display: 'flex',\n    justifyContent: 'center',\n    background: theme.palette.background.cta,\n    '& $address': {\n      color: theme.palette.text.primary,\n      textOverflow: 'clip',\n    },\n  },\n  known: {\n    border: `2px solid #D19847`,\n    '& .MuiAvatar-root': {\n      height: '24px',\n      width: '24px',\n      marginRight: '8px',\n    },\n    '& $address': {\n      color: theme.palette.text.secondary,\n    },\n    '&:hover': {\n      borderColor: '#3F466D',\n    },\n  },\n  connected: {\n    borderColor: theme.palette.background.cta,\n  },\n  loading: {\n    paddingTop: '4px',\n  },\n  blurred: {\n    filter: 'blur(.5rem)',\n  },\n});\n"],"sourceRoot":""}