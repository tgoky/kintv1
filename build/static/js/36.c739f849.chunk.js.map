{"version":3,"sources":["../../src/index.ts","../../node_modules/regenerator-runtime/runtime.js"],"names":["ConnectorEvent","AbstractConnector","supportedChainIds","emitUpdate","update","emit","Update","emitError","error","Error","emitDeactivate","Deactivate","EventEmitter","runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","parseSendReturn","sendReturn","NoCloverProviderError","message","UserRejectedRequestError","CloverConnector","kwargs","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","getCloverProvider","chainId","provider","accounts","account","code","reason","networkId","window","clover","providers","find","p","isClover","activate","on","autoRefreshOnNetworkChange","send","enable","getProvider","getChainId","isDapper","cachedResults","net_version","netVersion","networkVersion","_chainId","getAccount","deactivate","removeListener","isAuthorized"],"mappings":"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","file":"static/js/36.c739f849.chunk.js","sourcesContent":["import { AbstractConnectorArguments, ConnectorUpdate } from \"@web3-react/types\";\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport warning from \"tiny-warning\";\n\nimport { SendReturnResult, SendReturn, Send, SendOld } from \"./types\";\n\nfunction parseSendReturn(sendReturn: SendReturnResult | SendReturn): any {\n  return sendReturn.hasOwnProperty(\"result\") ? sendReturn.result : sendReturn;\n}\n\nexport class NoCloverProviderError extends Error {\n  public constructor() {\n    super();\n    this.name = this.constructor.name;\n    this.message = \"No Clover provider was found on window.clover.\";\n  }\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super();\n    this.name = this.constructor.name;\n    this.message = \"The user rejected the request.\";\n  }\n}\n\nexport class CloverConnector extends AbstractConnector {\n  constructor(kwargs: AbstractConnectorArguments) {\n    super(kwargs);\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this);\n    this.handleChainChanged = this.handleChainChanged.bind(this);\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.getCloverProvider = this.getCloverProvider.bind(this)\n  }\n\n  private handleChainChanged(chainId: string | number): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId);\n    }\n    this.emitUpdate({ chainId, provider: this.getCloverProvider() });\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n    }\n    if (accounts.length === 0) {\n      this.emitDeactivate();\n    } else {\n      this.emitUpdate({ account: accounts[0] });\n    }\n  }\n\n  private handleClose(code: number, reason: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason);\n    }\n    this.emitDeactivate();\n  }\n\n  private handleNetworkChanged(networkId: string | number): void {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId);\n    }\n    this.emitUpdate({ chainId: networkId, provider: this.getCloverProvider() });\n  }\n\n  private getCloverProvider() {\n    const provider = window.clover as any\n    if (provider?.providers?.length) {\n      return provider.providers.find((p: any) => p.isClover) ?? provider.providers[0]\n    }\n    return provider\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!window.clover) {\n      throw new NoCloverProviderError();\n    }\n\n    const provider = this.getCloverProvider()\n    if (provider.on) {\n      provider.on(\"chainChanged\", this.handleChainChanged);\n      provider.on(\"accountsChanged\", this.handleAccountsChanged);\n      provider.on(\"close\", this.handleClose);\n      provider.on(\"networkChanged\", this.handleNetworkChanged);\n    }\n\n    if (provider.isClover) {\n      provider.autoRefreshOnNetworkChange = false;\n    }\n\n    // try to activate + get account via eth_requestAccounts\n    let account;\n    try {\n      account = await (provider.send as Send)(\n        \"eth_requestAccounts\"\n      ).then((sendReturn) => parseSendReturn(sendReturn)[0]);\n    } catch (error) {\n      if ((error as any).code === 4001) {\n        throw new UserRejectedRequestError();\n      }\n      warning(\n        false,\n        \"eth_requestAccounts was unsuccessful, falling back to enable\"\n      );\n    }\n\n    // if unsuccessful, try enable\n    if (!account) {\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n      account = await provider.enable().then(\n        (sendReturn: any) => sendReturn && parseSendReturn(sendReturn)[0]\n      );\n    }\n\n    return { provider: provider, ...(account ? { account } : {}) };\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.getCloverProvider();\n  }\n\n  public async getChainId(): Promise<number | string> {\n    if (!window.clover) {\n      throw new NoCloverProviderError();\n    }\n\n    let chainId;\n    const provider = this.getCloverProvider()\n    try {\n      chainId = await (provider.send as Send)(\"eth_chainId\").then(\n        parseSendReturn\n      );\n    } catch {\n      warning(\n        false,\n        \"eth_chainId was unsuccessful, falling back to net_version\"\n      );\n    }\n\n    if (!chainId) {\n      try {\n        chainId = await (provider.send as Send)(\"net_version\").then(\n          parseSendReturn\n        );\n      } catch {\n        warning(\n          false,\n          \"net_version was unsuccessful, falling back to net version v2\"\n        );\n      }\n    }\n\n    if (!chainId) {\n      try {\n        chainId = parseSendReturn(\n          (provider.send as SendOld)({ method: \"net_version\" })\n        );\n      } catch {\n        warning(\n          false,\n          \"net_version v2 was unsuccessful, falling back to manual matches and static properties\"\n        );\n      }\n    }\n\n    if (!chainId) {\n      if ((provider as any).isDapper) {\n        chainId = parseSendReturn(\n          (provider as any).cachedResults.net_version\n        );\n      } else {\n        chainId =\n          provider.chainId ||\n          provider.netVersion ||\n          provider.networkVersion ||\n          provider._chainId;\n      }\n    }\n\n    return chainId;\n  }\n\n  public async getAccount(): Promise<null | string> {\n    if (!window.clover) {\n      throw new NoCloverProviderError();\n    }\n\n    let account;\n    const provider = this.getCloverProvider()\n    try {\n      account = await (provider.send as Send)(\"eth_accounts\").then(\n        (sendReturn) => parseSendReturn(sendReturn)[0]\n      );\n    } catch {\n      warning(false, \"eth_accounts was unsuccessful, falling back to enable\");\n    }\n\n    if (!account) {\n      try {\n        account = await provider.enable().then(\n          (sendReturn: any) => parseSendReturn(sendReturn)[0]\n        );\n      } catch {\n        warning(\n          false,\n          \"enable was unsuccessful, falling back to eth_accounts v2\"\n        );\n      }\n    }\n\n    if (!account) {\n      account = parseSendReturn(\n        (provider.send as SendOld)({ method: \"eth_accounts\" })\n      )[0];\n    }\n\n    return account;\n  }\n\n  public deactivate() {\n    const provider = this.getCloverProvider()\n    if (provider?.removeListener) {\n      provider.removeListener(\n        \"chainChanged\",\n        this.handleChainChanged\n      );\n      provider.removeListener(\n        \"accountsChanged\",\n        this.handleAccountsChanged\n      );\n      provider.removeListener(\"close\", this.handleClose);\n      provider.removeListener(\n        \"networkChanged\",\n        this.handleNetworkChanged\n      );\n    }\n  }\n\n  public async isAuthorized(): Promise<boolean> {\n    if (!window.clover) {\n      return false;\n    }\n\n    const provider = this.getCloverProvider()\n    try {\n      return await (provider.send as Send)(\"eth_accounts\").then(\n        (sendReturn) => {\n          if (parseSendReturn(sendReturn).length > 0) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      );\n    } catch {\n      return false;\n    }\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}