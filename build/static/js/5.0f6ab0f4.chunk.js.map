{"version":3,"sources":["../../node_modules/viem/_esm/errors/version.js","../../node_modules/viem/_esm/errors/utils.js","../../node_modules/viem/_esm/errors/base.js","../../node_modules/viem/_esm/errors/encoding.js","../../node_modules/viem/_esm/utils/data/isHex.js","../../node_modules/viem/_esm/utils/data/size.js","../../node_modules/viem/_esm/utils/data/trim.js","../../node_modules/viem/_esm/errors/data.js","../../node_modules/viem/_esm/utils/data/pad.js","../../node_modules/viem/_esm/utils/encoding/toHex.js","../../node_modules/viem/_esm/utils/encoding/toBytes.js","../../node_modules/viem/_esm/utils/encoding/fromHex.js","../../node_modules/viem/_esm/utils/formatters/formatter.js","../../node_modules/viem/_esm/errors/address.js","../../node_modules/viem/_esm/utils/lru.js","../../node_modules/@noble/hashes/esm/_assert.js","../../node_modules/@noble/hashes/esm/_u64.js","../../node_modules/@noble/hashes/esm/utils.js","../../node_modules/@noble/hashes/esm/sha3.js","../../node_modules/viem/_esm/utils/hash/keccak256.js","../../node_modules/viem/_esm/utils/address/getAddress.js","../../node_modules/viem/_esm/utils/address/isAddress.js","../../node_modules/viem/_esm/utils/data/concat.js","../../node_modules/viem/_esm/errors/cursor.js","../../node_modules/viem/_esm/utils/cursor.js","../../node_modules/viem/_esm/constants/unit.js","../../node_modules/viem/_esm/utils/unit/formatUnits.js","../../node_modules/viem/_esm/utils/unit/formatGwei.js","../../node_modules/viem/_esm/errors/transaction.js","../../node_modules/viem/_esm/errors/chain.js","../../node_modules/viem/_esm/errors/node.js","../../node_modules/viem/_esm/utils/data/slice.js","../../node_modules/viem/_esm/utils/formatters/transactionRequest.js"],"names":["getContractAddress","address","getUrl","url","BaseError","Error","constructor","shortMessage","args","super","Object","defineProperty","this","enumerable","configurable","writable","value","details","cause","message","docsPath","metaMessages","docsSlug","version","join","walk","fn","err","IntegerOutOfRangeError","max","min","signed","size","InvalidBytesBooleanError","bytes","SizeOverflowError","givenSize","maxSize","isHex","strict","test","startsWith","Math","ceil","length","trim","hexOrBytes","dir","data","replace","sliceLength","i","toString","slice","SliceOffsetOutOfBoundsError","offset","position","SizeExceedsPaddingSizeError","targetSize","type","charAt","toUpperCase","toLowerCase","InvalidBytesLengthError","pad","padHex","paddedBytes","Uint8Array","padEnd","padBytes","hex_","hex","hexes","Array","from","_v","padStart","toHex","opts","numberToHex","stringToHex","boolToHex","bytesToHex","Number","assertSize","string","value_","BigInt","maxValue","MAX_SAFE_INTEGER","minValue","suffix","undefined","encoder","TextEncoder","encode","toBytes","hexToBytes","numberToBytes","boolToBytes","stringToBytes","charCodeMap","zero","nine","A","F","a","f","charCodeToBase16","char","hexString","index","j","nibbleLeft","charCodeAt","nibbleRight","size_","hexToBigInt","hexToNumber","defineFormatter","format","exclude","overrides","formatted","key","InvalidAddressError","LruMap","Map","set","delete","keys","next","number","n","isSafeInteger","b","lengths","includes","exists","instance","checkFinished","destroyed","finished","output","out","outputLen","U32_MASK64","_32n","fromBig","h","l","split","lst","le","Ah","Uint32Array","Al","u8a","createView","arr","DataView","buffer","byteOffset","byteLength","rotr","word","shift","str","utf8ToBytes","Hash","clone","_cloneInto","wrapConstructor","hashCons","hashC","msg","update","digest","tmp","blockLen","create","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","x","y","push","t","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","s","rotlBH","rotlSH","rotlL","rotlBL","rotlSL","Keccak","enableXOF","rounds","pos","posOut","state","state32","floor","keccak","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","fill","keccakP","len","take","finish","writeInto","bufferOut","subarray","xofInto","xof","digestInto","destroy","to","keccak_256","gen","keccak256","to_","checksumAddressCache","checksumAddress","address_","chainId","has","get","hexAddress","substring","hash","result","addressRegex","isAddressCache","isAddress","options","concat","values","concatHex","concatBytes","reduce","acc","NegativeOffsetError","PositionOutOfBoundsError","RecursiveReadLimitExceededError","count","limit","staticCursor","dataView","ArrayBuffer","positionReadCount","recursiveReadCount","recursiveReadLimit","POSITIVE_INFINITY","assertReadLimit","assertPosition","decrementPosition","getReadCount","incrementPosition","inspectByte","position_","inspectBytes","inspectUint8","inspectUint16","getUint16","inspectUint24","getUint8","inspectUint32","getUint32","pushByte","byte","pushBytes","pushUint8","pushUint16","setUint16","pushUint24","setUint8","pushUint32","setUint32","readByte","_touch","readBytes","readUint8","readUint16","readUint24","readUint32","remaining","setPosition","oldPosition","createCursor","cursor","etherUnits","gwei","wei","gweiUnits","ether","formatUnits","decimals","display","negative","integer","fraction","formatGwei","prettyPrint","entries","map","filter","Boolean","maxLength","FeeConflictError","InvalidLegacyVError","v","InvalidSerializableTransactionError","transaction","InvalidStorageKeySizeError","storageKey","ChainDoesNotSupportContract","blockNumber","chain","contract","name","blockCreated","ClientChainNotConfiguredError","InvalidChainIdError","ExecutionRevertedError","reason","FeeCapTooHighError","maxFeePerGas","FeeCapTooLowError","NonceTooHighError","nonce","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","gas","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","maxPriorityFeePerGas","UnknownNodeError","start","end","assertStartOffset","assertEndOffset","sliceHex","sliceBytes","rpcTransactionType","legacy","eip2930","eip1559","eip4844","formatTransactionRequest","request","rpcRequest","accessList","blobVersionedHashes","blobs","gasPrice","maxFeePerBlobGas","defineTransactionRequest"],"mappings":"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","file":"static/js/5.0f6ab0f4.chunk.js","sourcesContent":["export const version = '2.12.0';\n//# sourceMappingURL=version.js.map","import { version } from './version.js';\nexport const getContractAddress = (address) => address;\nexport const getUrl = (url) => url;\nexport const getVersion = () => `viem@${version}`;\n//# sourceMappingURL=utils.js.map","import { getVersion } from './utils.js';\nexport class BaseError extends Error {\n    constructor(shortMessage, args = {}) {\n        super();\n        Object.defineProperty(this, \"details\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docsPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metaMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shortMessage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ViemError'\n        });\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getVersion()\n        });\n        const details = args.cause instanceof BaseError\n            ? args.cause.details\n            : args.cause?.message\n                ? args.cause.message\n                : args.details;\n        const docsPath = args.cause instanceof BaseError\n            ? args.cause.docsPath || args.docsPath\n            : args.docsPath;\n        this.message = [\n            shortMessage || 'An error occurred.',\n            '',\n            ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n            ...(docsPath\n                ? [\n                    `Docs: https://viem.sh${docsPath}${args.docsSlug ? `#${args.docsSlug}` : ''}`,\n                ]\n                : []),\n            ...(details ? [`Details: ${details}`] : []),\n            `Version: ${this.version}`,\n        ].join('\\n');\n        if (args.cause)\n            this.cause = args.cause;\n        this.details = details;\n        this.docsPath = docsPath;\n        this.metaMessages = args.metaMessages;\n        this.shortMessage = shortMessage;\n    }\n    walk(fn) {\n        return walk(this, fn);\n    }\n}\nfunction walk(err, fn) {\n    if (fn?.(err))\n        return err;\n    if (err && typeof err === 'object' && 'cause' in err)\n        return walk(err.cause, fn);\n    return fn ? null : err;\n}\n//# sourceMappingURL=base.js.map","import { BaseError } from './base.js';\nexport class IntegerOutOfRangeError extends BaseError {\n    constructor({ max, min, signed, size, value, }) {\n        super(`Number \"${value}\" is not in safe ${size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''}integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntegerOutOfRangeError'\n        });\n    }\n}\nexport class InvalidBytesBooleanError extends BaseError {\n    constructor(bytes) {\n        super(`Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidBytesBooleanError'\n        });\n    }\n}\nexport class InvalidHexBooleanError extends BaseError {\n    constructor(hex) {\n        super(`Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidHexBooleanError'\n        });\n    }\n}\nexport class InvalidHexValueError extends BaseError {\n    constructor(value) {\n        super(`Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidHexValueError'\n        });\n    }\n}\nexport class SizeOverflowError extends BaseError {\n    constructor({ givenSize, maxSize }) {\n        super(`Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'SizeOverflowError'\n        });\n    }\n}\n//# sourceMappingURL=encoding.js.map","export function isHex(value, { strict = true } = {}) {\n    if (!value)\n        return false;\n    if (typeof value !== 'string')\n        return false;\n    return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x');\n}\n//# sourceMappingURL=isHex.js.map","import { isHex } from './isHex.js';\n/**\n * @description Retrieves the size of the value (in bytes).\n *\n * @param value The value (hex or byte array) to retrieve the size of.\n * @returns The size of the value (in bytes).\n */\nexport function size(value) {\n    if (isHex(value, { strict: false }))\n        return Math.ceil((value.length - 2) / 2);\n    return value.length;\n}\n//# sourceMappingURL=size.js.map","export function trim(hexOrBytes, { dir = 'left' } = {}) {\n    let data = typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes;\n    let sliceLength = 0;\n    for (let i = 0; i < data.length - 1; i++) {\n        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n            sliceLength++;\n        else\n            break;\n    }\n    data =\n        dir === 'left'\n            ? data.slice(sliceLength)\n            : data.slice(0, data.length - sliceLength);\n    if (typeof hexOrBytes === 'string') {\n        if (data.length === 1 && dir === 'right')\n            data = `${data}0`;\n        return `0x${data.length % 2 === 1 ? `0${data}` : data}`;\n    }\n    return data;\n}\n//# sourceMappingURL=trim.js.map","import { BaseError } from './base.js';\nexport class SliceOffsetOutOfBoundsError extends BaseError {\n    constructor({ offset, position, size, }) {\n        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset \"${offset}\" is out-of-bounds (size: ${size}).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'SliceOffsetOutOfBoundsError'\n        });\n    }\n}\nexport class SizeExceedsPaddingSizeError extends BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'SizeExceedsPaddingSizeError'\n        });\n    }\n}\nexport class InvalidBytesLengthError extends BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidBytesLengthError'\n        });\n    }\n}\n//# sourceMappingURL=data.js.map","import { SizeExceedsPaddingSizeError, } from '../../errors/data.js';\nexport function pad(hexOrBytes, { dir, size = 32 } = {}) {\n    if (typeof hexOrBytes === 'string')\n        return padHex(hexOrBytes, { dir, size });\n    return padBytes(hexOrBytes, { dir, size });\n}\nexport function padHex(hex_, { dir, size = 32 } = {}) {\n    if (size === null)\n        return hex_;\n    const hex = hex_.replace('0x', '');\n    if (hex.length > size * 2)\n        throw new SizeExceedsPaddingSizeError({\n            size: Math.ceil(hex.length / 2),\n            targetSize: size,\n            type: 'hex',\n        });\n    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;\n}\nexport function padBytes(bytes, { dir, size = 32 } = {}) {\n    if (size === null)\n        return bytes;\n    if (bytes.length > size)\n        throw new SizeExceedsPaddingSizeError({\n            size: bytes.length,\n            targetSize: size,\n            type: 'bytes',\n        });\n    const paddedBytes = new Uint8Array(size);\n    for (let i = 0; i < size; i++) {\n        const padEnd = dir === 'right';\n        paddedBytes[padEnd ? i : size - i - 1] =\n            bytes[padEnd ? i : bytes.length - i - 1];\n    }\n    return paddedBytes;\n}\n//# sourceMappingURL=pad.js.map","import { IntegerOutOfRangeError, } from '../../errors/encoding.js';\nimport { pad } from '../data/pad.js';\nimport { assertSize } from './fromHex.js';\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\n/**\n * Encodes a string, number, bigint, or ByteArray into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex\n * - Example: https://viem.sh/docs/utilities/toHex#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world')\n * // '0x48656c6c6f20776f726c6421'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex(420)\n * // '0x1a4'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world', { size: 32 })\n * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'\n */\nexport function toHex(value, opts = {}) {\n    if (typeof value === 'number' || typeof value === 'bigint')\n        return numberToHex(value, opts);\n    if (typeof value === 'string') {\n        return stringToHex(value, opts);\n    }\n    if (typeof value === 'boolean')\n        return boolToHex(value, opts);\n    return bytesToHex(value, opts);\n}\n/**\n * Encodes a boolean into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#booltohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true)\n * // '0x1'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(false)\n * // '0x0'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true, { size: 32 })\n * // '0x0000000000000000000000000000000000000000000000000000000000000001'\n */\nexport function boolToHex(value, opts = {}) {\n    const hex = `0x${Number(value)}`;\n    if (typeof opts.size === 'number') {\n        assertSize(hex, { size: opts.size });\n        return pad(hex, { size: opts.size });\n    }\n    return hex;\n}\n/**\n * Encodes a bytes array into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#bytestohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function bytesToHex(value, opts = {}) {\n    let string = '';\n    for (let i = 0; i < value.length; i++) {\n        string += hexes[value[i]];\n    }\n    const hex = `0x${string}`;\n    if (typeof opts.size === 'number') {\n        assertSize(hex, { size: opts.size });\n        return pad(hex, { dir: 'right', size: opts.size });\n    }\n    return hex;\n}\n/**\n * Encodes a number or bigint into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#numbertohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420)\n * // '0x1a4'\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420, { size: 32 })\n * // '0x00000000000000000000000000000000000000000000000000000000000001a4'\n */\nexport function numberToHex(value_, opts = {}) {\n    const { signed, size } = opts;\n    const value = BigInt(value_);\n    let maxValue;\n    if (size) {\n        if (signed)\n            maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n        else\n            maxValue = 2n ** (BigInt(size) * 8n) - 1n;\n    }\n    else if (typeof value_ === 'number') {\n        maxValue = BigInt(Number.MAX_SAFE_INTEGER);\n    }\n    const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0;\n    if ((maxValue && value > maxValue) || value < minValue) {\n        const suffix = typeof value_ === 'bigint' ? 'n' : '';\n        throw new IntegerOutOfRangeError({\n            max: maxValue ? `${maxValue}${suffix}` : undefined,\n            min: `${minValue}${suffix}`,\n            signed,\n            size,\n            value: `${value_}${suffix}`,\n        });\n    }\n    const hex = `0x${(signed && value < 0\n        ? (1n << BigInt(size * 8)) + BigInt(value)\n        : value).toString(16)}`;\n    if (size)\n        return pad(hex, { size });\n    return hex;\n}\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Encodes a UTF-8 string into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#stringtohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function stringToHex(value_, opts = {}) {\n    const value = encoder.encode(value_);\n    return bytesToHex(value, opts);\n}\n//# sourceMappingURL=toHex.js.map","import { BaseError } from '../../errors/base.js';\nimport { isHex } from '../data/isHex.js';\nimport { pad } from '../data/pad.js';\nimport { assertSize } from './fromHex.js';\nimport { numberToHex, } from './toHex.js';\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes\n * - Example: https://viem.sh/docs/utilities/toBytes#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes('Hello world')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function toBytes(value, opts = {}) {\n    if (typeof value === 'number' || typeof value === 'bigint')\n        return numberToBytes(value, opts);\n    if (typeof value === 'boolean')\n        return boolToBytes(value, opts);\n    if (isHex(value))\n        return hexToBytes(value, opts);\n    return stringToBytes(value, opts);\n}\n/**\n * Encodes a boolean into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#booltobytes\n *\n * @param value Boolean value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true)\n * // Uint8Array([1])\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true, { size: 32 })\n * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n */\nexport function boolToBytes(value, opts = {}) {\n    const bytes = new Uint8Array(1);\n    bytes[0] = Number(value);\n    if (typeof opts.size === 'number') {\n        assertSize(bytes, { size: opts.size });\n        return pad(bytes, { size: opts.size });\n    }\n    return bytes;\n}\n// We use very optimized technique to convert hex string to byte array\nconst charCodeMap = {\n    zero: 48,\n    nine: 57,\n    A: 65,\n    F: 70,\n    a: 97,\n    f: 102,\n};\nfunction charCodeToBase16(char) {\n    if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n        return char - charCodeMap.zero;\n    if (char >= charCodeMap.A && char <= charCodeMap.F)\n        return char - (charCodeMap.A - 10);\n    if (char >= charCodeMap.a && char <= charCodeMap.f)\n        return char - (charCodeMap.a - 10);\n    return undefined;\n}\n/**\n * Encodes a hex string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#hextobytes\n *\n * @param hex Hex string to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function hexToBytes(hex_, opts = {}) {\n    let hex = hex_;\n    if (opts.size) {\n        assertSize(hex, { size: opts.size });\n        hex = pad(hex, { dir: 'right', size: opts.size });\n    }\n    let hexString = hex.slice(2);\n    if (hexString.length % 2)\n        hexString = `0${hexString}`;\n    const length = hexString.length / 2;\n    const bytes = new Uint8Array(length);\n    for (let index = 0, j = 0; index < length; index++) {\n        const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++));\n        const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++));\n        if (nibbleLeft === undefined || nibbleRight === undefined) {\n            throw new BaseError(`Invalid byte sequence (\"${hexString[j - 2]}${hexString[j - 1]}\" in \"${hexString}\").`);\n        }\n        bytes[index] = nibbleLeft * 16 + nibbleRight;\n    }\n    return bytes;\n}\n/**\n * Encodes a number into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#numbertobytes\n *\n * @param value Number to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function numberToBytes(value, opts) {\n    const hex = numberToHex(value, opts);\n    return hexToBytes(hex);\n}\n/**\n * Encodes a UTF-8 string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#stringtobytes\n *\n * @param value String to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function stringToBytes(value, opts = {}) {\n    const bytes = encoder.encode(value);\n    if (typeof opts.size === 'number') {\n        assertSize(bytes, { size: opts.size });\n        return pad(bytes, { dir: 'right', size: opts.size });\n    }\n    return bytes;\n}\n//# sourceMappingURL=toBytes.js.map","import { InvalidHexBooleanError, SizeOverflowError, } from '../../errors/encoding.js';\nimport { size as size_ } from '../data/size.js';\nimport { trim } from '../data/trim.js';\nimport { hexToBytes } from './toBytes.js';\nexport function assertSize(hexOrBytes, { size }) {\n    if (size_(hexOrBytes) > size)\n        throw new SizeOverflowError({\n            givenSize: size_(hexOrBytes),\n            maxSize: size,\n        });\n}\n/**\n * Decodes a hex string into a string, number, bigint, boolean, or byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex\n * - Example: https://viem.sh/docs/utilities/fromHex#usage\n *\n * @param hex Hex string to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x1a4', 'number')\n * // 420\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')\n * // 'Hello world'\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *   size: 32,\n *   to: 'string'\n * })\n * // 'Hello world'\n */\nexport function fromHex(hex, toOrOpts) {\n    const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts;\n    const to = opts.to;\n    if (to === 'number')\n        return hexToNumber(hex, opts);\n    if (to === 'bigint')\n        return hexToBigInt(hex, opts);\n    if (to === 'string')\n        return hexToString(hex, opts);\n    if (to === 'boolean')\n        return hexToBool(hex, opts);\n    return hexToBytes(hex, opts);\n}\n/**\n * Decodes a hex value into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobigint\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x1a4', { signed: true })\n * // 420n\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420n\n */\nexport function hexToBigInt(hex, opts = {}) {\n    const { signed } = opts;\n    if (opts.size)\n        assertSize(hex, { size: opts.size });\n    const value = BigInt(hex);\n    if (!signed)\n        return value;\n    const size = (hex.length - 2) / 2;\n    const max = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n    if (value <= max)\n        return value;\n    return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n;\n}\n/**\n * Decodes a hex value into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobool\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x01')\n * // true\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // true\n */\nexport function hexToBool(hex_, opts = {}) {\n    let hex = hex_;\n    if (opts.size) {\n        assertSize(hex, { size: opts.size });\n        hex = trim(hex);\n    }\n    if (trim(hex) === '0x00')\n        return false;\n    if (trim(hex) === '0x01')\n        return true;\n    throw new InvalidHexBooleanError(hex);\n}\n/**\n * Decodes a hex string into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextonumber\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToNumber('0x1a4')\n * // 420\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420\n */\nexport function hexToNumber(hex, opts = {}) {\n    return Number(hexToBigInt(hex, opts));\n}\n/**\n * Decodes a hex value into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextostring\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c6421')\n * // 'Hello world!'\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // 'Hello world'\n */\nexport function hexToString(hex, opts = {}) {\n    let bytes = hexToBytes(hex);\n    if (opts.size) {\n        assertSize(bytes, { size: opts.size });\n        bytes = trim(bytes, { dir: 'right' });\n    }\n    return new TextDecoder().decode(bytes);\n}\n//# sourceMappingURL=fromHex.js.map","export function defineFormatter(type, format) {\n    return ({ exclude, format: overrides, }) => {\n        return {\n            exclude,\n            format: (args) => {\n                const formatted = format(args);\n                if (exclude) {\n                    for (const key of exclude) {\n                        delete formatted[key];\n                    }\n                }\n                return {\n                    ...formatted,\n                    ...overrides(args),\n                };\n            },\n            type,\n        };\n    };\n}\n//# sourceMappingURL=formatter.js.map","import { BaseError } from './base.js';\nexport class InvalidAddressError extends BaseError {\n    constructor({ address }) {\n        super(`Address \"${address}\" is invalid.`, {\n            metaMessages: [\n                '- Address must be a hex value of 20 bytes (40 hex characters).',\n                '- Address must match its checksum counterpart.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidAddressError'\n        });\n    }\n}\n//# sourceMappingURL=address.js.map","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap extends Map {\n    constructor(size) {\n        super();\n        Object.defineProperty(this, \"maxSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxSize = size;\n    }\n    set(key, value) {\n        super.set(key, value);\n        if (this.maxSize && this.size > this.maxSize)\n            this.delete(this.keys().next().value);\n        return this;\n    }\n}\n//# sourceMappingURL=lru.js.map","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import { keccak_256 } from '@noble/hashes/sha3';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function keccak256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = keccak_256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=keccak256.js.map","import { InvalidAddressError } from '../../errors/address.js';\nimport { stringToBytes, } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { LruMap } from '../lru.js';\nimport { isAddress } from './isAddress.js';\nexport const checksumAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function checksumAddress(address_, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (checksumAddressCache.has(`${address_}.${chainId}`))\n        return checksumAddressCache.get(`${address_}.${chainId}`);\n    const hexAddress = chainId\n        ? `${chainId}${address_.toLowerCase()}`\n        : address_.substring(2).toLowerCase();\n    const hash = keccak256(stringToBytes(hexAddress), 'bytes');\n    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');\n    for (let i = 0; i < 40; i += 2) {\n        if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n            address[i] = address[i].toUpperCase();\n        }\n        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n            address[i + 1] = address[i + 1].toUpperCase();\n        }\n    }\n    const result = `0x${address.join('')}`;\n    checksumAddressCache.set(`${address_}.${chainId}`, result);\n    return result;\n}\nexport function getAddress(address, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (!isAddress(address, { strict: false }))\n        throw new InvalidAddressError({ address });\n    return checksumAddress(address, chainId);\n}\n//# sourceMappingURL=getAddress.js.map","import { LruMap } from '../lru.js';\nimport { checksumAddress } from './getAddress.js';\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/;\nexport const isAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function isAddress(address, options) {\n    const { strict = true } = options ?? {};\n    if (isAddressCache.has(address))\n        return isAddressCache.get(address);\n    const result = (() => {\n        if (!addressRegex.test(address))\n            return false;\n        if (address.toLowerCase() === address)\n            return true;\n        if (strict)\n            return checksumAddress(address) === address;\n        return true;\n    })();\n    isAddressCache.set(address, result);\n    return result;\n}\n//# sourceMappingURL=isAddress.js.map","export function concat(values) {\n    if (typeof values[0] === 'string')\n        return concatHex(values);\n    return concatBytes(values);\n}\nexport function concatBytes(values) {\n    let length = 0;\n    for (const arr of values) {\n        length += arr.length;\n    }\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const arr of values) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\nexport function concatHex(values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n}\n//# sourceMappingURL=concat.js.map","import { BaseError } from './base.js';\nexport class NegativeOffsetError extends BaseError {\n    constructor({ offset }) {\n        super(`Offset \\`${offset}\\` cannot be negative.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NegativeOffsetError'\n        });\n    }\n}\nexport class PositionOutOfBoundsError extends BaseError {\n    constructor({ length, position }) {\n        super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PositionOutOfBoundsError'\n        });\n    }\n}\nexport class RecursiveReadLimitExceededError extends BaseError {\n    constructor({ count, limit }) {\n        super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'RecursiveReadLimitExceededError'\n        });\n    }\n}\n//# sourceMappingURL=cursor.js.map","import { NegativeOffsetError, PositionOutOfBoundsError, RecursiveReadLimitExceededError, } from '../errors/cursor.js';\nconst staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n        if (this.recursiveReadCount >= this.recursiveReadLimit)\n            throw new RecursiveReadLimitExceededError({\n                count: this.recursiveReadCount + 1,\n                limit: this.recursiveReadLimit,\n            });\n    },\n    assertPosition(position) {\n        if (position < 0 || position > this.bytes.length - 1)\n            throw new PositionOutOfBoundsError({\n                length: this.bytes.length,\n                position,\n            });\n    },\n    decrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position - offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    getReadCount(position) {\n        return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position + offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    inspectByte(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + length - 1);\n        return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectUint16(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 1);\n        return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 2);\n        return ((this.dataView.getUint16(position) << 8) +\n            this.dataView.getUint8(position + 2));\n    },\n    inspectUint32(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 3);\n        return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = byte;\n        this.position++;\n    },\n    pushBytes(bytes) {\n        this.assertPosition(this.position + bytes.length - 1);\n        this.bytes.set(bytes, this.position);\n        this.position += bytes.length;\n    },\n    pushUint8(value) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = value;\n        this.position++;\n    },\n    pushUint16(value) {\n        this.assertPosition(this.position + 1);\n        this.dataView.setUint16(this.position, value);\n        this.position += 2;\n    },\n    pushUint24(value) {\n        this.assertPosition(this.position + 2);\n        this.dataView.setUint16(this.position, value >> 8);\n        this.dataView.setUint8(this.position + 2, value & ~4294967040);\n        this.position += 3;\n    },\n    pushUint32(value) {\n        this.assertPosition(this.position + 3);\n        this.dataView.setUint32(this.position, value);\n        this.position += 4;\n    },\n    readByte() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectByte();\n        this.position++;\n        return value;\n    },\n    readBytes(length, size) {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectBytes(length);\n        this.position += size ?? length;\n        return value;\n    },\n    readUint8() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint8();\n        this.position += 1;\n        return value;\n    },\n    readUint16() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint16();\n        this.position += 2;\n        return value;\n    },\n    readUint24() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint24();\n        this.position += 3;\n        return value;\n    },\n    readUint32() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint32();\n        this.position += 4;\n        return value;\n    },\n    get remaining() {\n        return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n        const oldPosition = this.position;\n        this.assertPosition(position);\n        this.position = position;\n        return () => (this.position = oldPosition);\n    },\n    _touch() {\n        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)\n            return;\n        const count = this.getReadCount();\n        this.positionReadCount.set(this.position, count + 1);\n        if (count > 0)\n            this.recursiveReadCount++;\n    },\n};\nexport function createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {\n    const cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n}\n//# sourceMappingURL=cursor.js.map","export const etherUnits = {\n    gwei: 9,\n    wei: 18,\n};\nexport const gweiUnits = {\n    ether: -9,\n    wei: 9,\n};\nexport const weiUnits = {\n    ether: -18,\n    gwei: -9,\n};\n//# sourceMappingURL=unit.js.map","/**\n *  Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\n *\n * - Docs: https://viem.sh/docs/utilities/formatUnits\n *\n * @example\n * import { formatUnits } from 'viem'\n *\n * formatUnits(420000000000n, 9)\n * // '420'\n */\nexport function formatUnits(value, decimals) {\n    let display = value.toString();\n    const negative = display.startsWith('-');\n    if (negative)\n        display = display.slice(1);\n    display = display.padStart(decimals, '0');\n    let [integer, fraction] = [\n        display.slice(0, display.length - decimals),\n        display.slice(display.length - decimals),\n    ];\n    fraction = fraction.replace(/(0+)$/, '');\n    return `${negative ? '-' : ''}${integer || '0'}${fraction ? `.${fraction}` : ''}`;\n}\n//# sourceMappingURL=formatUnits.js.map","import { gweiUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei, unit = 'wei') {\n    return formatUnits(wei, gweiUnits[unit]);\n}\n//# sourceMappingURL=formatGwei.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport function prettyPrint(args) {\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\nexport class FeeConflictError extends BaseError {\n    constructor() {\n        super([\n            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeConflictError'\n        });\n    }\n}\nexport class InvalidLegacyVError extends BaseError {\n    constructor({ v }) {\n        super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidLegacyVError'\n        });\n    }\n}\nexport class InvalidSerializableTransactionError extends BaseError {\n    constructor({ transaction }) {\n        super('Cannot infer a transaction type from provided transaction.', {\n            metaMessages: [\n                'Provided Transaction:',\n                '{',\n                prettyPrint(transaction),\n                '}',\n                '',\n                'To infer the type, either provide:',\n                '- a `type` to the Transaction, or',\n                '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n                '- a Legacy Transaction with `gasPrice`',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializableTransactionError'\n        });\n    }\n}\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n    constructor({ serializedType }) {\n        super(`Serialized transaction type \"${serializedType}\" is invalid.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionType'\n        });\n        Object.defineProperty(this, \"serializedType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedType = serializedType;\n    }\n}\nexport class InvalidSerializedTransactionError extends BaseError {\n    constructor({ attributes, serializedTransaction, type, }) {\n        const missing = Object.entries(attributes)\n            .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n            .filter(Boolean);\n        super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n            metaMessages: [\n                `Serialized Transaction: \"${serializedTransaction}\"`,\n                missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionError'\n        });\n        Object.defineProperty(this, \"serializedTransaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedTransaction = serializedTransaction;\n        this.type = type;\n    }\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n    constructor({ storageKey }) {\n        super(`Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidStorageKeySizeError'\n        });\n    }\n}\nexport class TransactionExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            chain: chain && `${chain?.name} (id: ${chain?.id})`,\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionExecutionError'\n        });\n        this.cause = cause;\n    }\n}\nexport class TransactionNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, blockTag, hash, index, }) {\n        let identifier = 'Transaction';\n        if (blockTag && index !== undefined)\n            identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`;\n        if (blockHash && index !== undefined)\n            identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`;\n        if (blockNumber && index !== undefined)\n            identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`;\n        if (hash)\n            identifier = `Transaction with hash \"${hash}\"`;\n        super(`${identifier} could not be found.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionNotFoundError'\n        });\n    }\n}\nexport class TransactionReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionReceiptNotFoundError'\n        });\n    }\n}\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WaitForTransactionReceiptTimeoutError'\n        });\n    }\n}\n//# sourceMappingURL=transaction.js.map","import { BaseError } from './base.js';\nexport class ChainDoesNotSupportContract extends BaseError {\n    constructor({ blockNumber, chain, contract, }) {\n        super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                ...(blockNumber &&\n                    contract.blockCreated &&\n                    contract.blockCreated > blockNumber\n                    ? [\n                        `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n                    ]\n                    : [\n                        `- The chain does not have the contract \"${contract.name}\" configured.`,\n                    ]),\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainDoesNotSupportContract'\n        });\n    }\n}\nexport class ChainMismatchError extends BaseError {\n    constructor({ chain, currentChainId, }) {\n        super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${currentChainId}`,\n                `Expected Chain ID: ${chain.id} – ${chain.name}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainMismatchError'\n        });\n    }\n}\nexport class ChainNotFoundError extends BaseError {\n    constructor() {\n        super([\n            'No chain was provided to the request.',\n            'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainNotFoundError'\n        });\n    }\n}\nexport class ClientChainNotConfiguredError extends BaseError {\n    constructor() {\n        super('No chain was provided to the Client.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ClientChainNotConfiguredError'\n        });\n    }\n}\nexport class InvalidChainIdError extends BaseError {\n    constructor({ chainId }) {\n        super(typeof chainId === 'number'\n            ? `Chain ID \"${chainId}\" is invalid.`\n            : 'Chain ID is invalid.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidChainIdError'\n        });\n    }\n}\n//# sourceMappingURL=chain.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ExecutionRevertedError'\n        });\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FeeCapTooHighError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooHigh'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nexport class FeeCapTooLowError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooLow'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nexport class NonceTooHighError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooHighError'\n        });\n    }\n}\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nexport class NonceTooLowError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooLowError'\n        });\n    }\n}\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nexport class NonceMaxValueError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceMaxValueError'\n        });\n    }\n}\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nexport class InsufficientFundsError extends BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InsufficientFundsError'\n        });\n    }\n}\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds/\n});\nexport class IntrinsicGasTooHighError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooHighError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nexport class IntrinsicGasTooLowError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooLowError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nexport class TransactionTypeNotSupportedError extends BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionTypeNotSupportedError'\n        });\n    }\n}\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nexport class TipAboveFeeCapError extends BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TipAboveFeeCapError'\n        });\n    }\n}\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nexport class UnknownNodeError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnknownNodeError'\n        });\n    }\n}\n//# sourceMappingURL=node.js.map","import { SliceOffsetOutOfBoundsError, } from '../../errors/data.js';\nimport { isHex } from './isHex.js';\nimport { size } from './size.js';\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice(value, start, end, { strict } = {}) {\n    if (isHex(value, { strict: false }))\n        return sliceHex(value, start, end, {\n            strict,\n        });\n    return sliceBytes(value, start, end, {\n        strict,\n    });\n}\nfunction assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n        throw new SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: size(value),\n        });\n}\nfunction assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        size(value) !== end - start) {\n        throw new SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: size(value),\n        });\n    }\n}\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = value_.slice(start, end);\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = `0x${value_\n        .replace('0x', '')\n        .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}`;\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n//# sourceMappingURL=slice.js.map","import { bytesToHex, numberToHex } from '../encoding/toHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const rpcTransactionType = {\n    legacy: '0x0',\n    eip2930: '0x1',\n    eip1559: '0x2',\n    eip4844: '0x3',\n};\nexport function formatTransactionRequest(request) {\n    const rpcRequest = {};\n    if (typeof request.accessList !== 'undefined')\n        rpcRequest.accessList = request.accessList;\n    if (typeof request.blobVersionedHashes !== 'undefined')\n        rpcRequest.blobVersionedHashes = request.blobVersionedHashes;\n    if (typeof request.blobs !== 'undefined') {\n        if (typeof request.blobs[0] !== 'string')\n            rpcRequest.blobs = request.blobs.map((x) => bytesToHex(x));\n        else\n            rpcRequest.blobs = request.blobs;\n    }\n    if (typeof request.data !== 'undefined')\n        rpcRequest.data = request.data;\n    if (typeof request.from !== 'undefined')\n        rpcRequest.from = request.from;\n    if (typeof request.gas !== 'undefined')\n        rpcRequest.gas = numberToHex(request.gas);\n    if (typeof request.gasPrice !== 'undefined')\n        rpcRequest.gasPrice = numberToHex(request.gasPrice);\n    if (typeof request.maxFeePerBlobGas !== 'undefined')\n        rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas);\n    if (typeof request.maxFeePerGas !== 'undefined')\n        rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n    if (typeof request.maxPriorityFeePerGas !== 'undefined')\n        rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n    if (typeof request.nonce !== 'undefined')\n        rpcRequest.nonce = numberToHex(request.nonce);\n    if (typeof request.to !== 'undefined')\n        rpcRequest.to = request.to;\n    if (typeof request.type !== 'undefined')\n        rpcRequest.type = rpcTransactionType[request.type];\n    if (typeof request.value !== 'undefined')\n        rpcRequest.value = numberToHex(request.value);\n    return rpcRequest;\n}\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter('transactionRequest', formatTransactionRequest);\n//# sourceMappingURL=transactionRequest.js.map"],"sourceRoot":""}